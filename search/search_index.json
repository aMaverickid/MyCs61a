{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to some CS courses' notes!","text":"<p>Welcome to my CS courses' notes! This website will simply be a collection of notes/examples that I have found useful for myself during my study.</p> <p>It may not be as neat and organized as other fancy notes from the Internet, but I hope that some information here can be helpful to somebody.</p>"},{"location":"Courses/ADS/midtermReview/","title":"Advanced Data Structure","text":""},{"location":"Courses/ADS/midtermReview/#midterm-review","title":"Midterm Review","text":"<p>\u590d\u4e60\u5404\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\u53ca\u5176\u590d\u6742\u5ea6\uff08search\u3001insert\u3001delete\uff09</p>"},{"location":"Courses/ADS/midtermReview/#avl-tree","title":"AVL Tree","text":""},{"location":"Courses/ADS/midtermReview/#_1","title":"\u7ed3\u6784","text":"<ol> <li>BalanceFactor(node) = hl - hr  \u53d6\u503c\u5728 {-1, 0 , 1} \u4e2d</li> <li>\u4e00\u4e2a\u5168\u7a7a\u4e8c\u53c9\u6811\u662f AVL Tree\uff0c\u9ad8\u5ea6\u4e3a -1</li> <li>\u4e00\u79cd\u81ea\u5e73\u8861\u6811\uff0c\u6240\u4ee5\u6709 N \u4e2a\u8282\u70b9\u7684 AVL Tree\u9ad8\u5ea6\u6ee1\u8db3 O(lnN)</li> <li>More specificly, \u5bf9\u4e8e AVL \u6811\u6709 \\(n_h = n_{h-1} + n_{h-2} + 1\\). \u56e0\u6b64\u6709 \\(n_h = F_{h+3} - 1\\). F0, F1, F2, F3... = 0, 1, 1, 2... </li> <li>\uff0c\u6240\u4ee5\u9ad8\u4e3a h \u7684 AVL Tree \u8282\u70b9\u4e2a\u6570\u6ee1\u8db3 \\(O((\\frac{1+\\sqrt{5}}{2})^h)\\)</li> </ol>"},{"location":"Courses/ADS/midtermReview/#_2","title":"\u64cd\u4f5c","text":"<p>Search\u3001insert\u3001delete \u64cd\u4f5c\u4e0e BST \u76f8\u540c \u4e0d\u540c\u7684\u662f\u9700\u8981\u4f7f\u7528 Rotation \u7ef4\u62a4  </p> <p></p>"},{"location":"Courses/ADS/midtermReview/#_3","title":"\u590d\u6742\u5ea6","text":""},{"location":"Courses/ADS/midtermReview/#splay-tree","title":"Splay Tree","text":""},{"location":"Courses/ADS/midtermReview/#_4","title":"\u7ed3\u6784","text":"<ol> <li>\u4e00\u79cd\u81ea\u5e73\u8861\u6811\uff0c\u5e73\u5747\u6027\u80fd\u4e0e AVL\u6811\u4e00\u6837\u9ad8\u6548\uff0c\u4e14\u4e0d\u9700\u8981\u8bb0\u5f55\u989d\u5916\u6570\u636e\uff0c\u7f3a\u70b9\u662f worst case\u4e2d\u4f1a\u5f62\u6210\u4e00\u4e2a\u94fe\u8868</li> </ol>"},{"location":"Courses/ADS/midtermReview/#_5","title":"\u64cd\u4f5c","text":"<p>Search\u3001insert\u3001delete \u64cd\u4f5c\u4e0e BST \u76f8\u540c \u4e0d\u540c\u7684\u662f\u6bcf\u6b21\u8bbf\u95ee\u6216\u63d2\u5165\u6216\u5220\u9664\u7684\u8282\u70b9\u540e\u9700\u8981\u65cb\u8f6c\u81f3\u9876\u70b9\u5904 </p>"},{"location":"Courses/ADS/midtermReview/#_6","title":"\u590d\u6742\u5ea6","text":"<p>\u590d\u6742\u5ea6\u8fd9\u91cc\u8981\u6ce8\u610f Splay Tree \u7684  Amortized Analysis:</p> <p>\u8bb0 \\(Rank(i) = \\log{S(i)}\\) , S(i) \u4e3a\u542b\u81ea\u8eab\u7684 i \u7684\u4e0b\u5c5e\u5b50\u8282\u70b9\u4e2a\u6570</p> <p>\u52bf\u80fd\u51fd\u6570\u4e3a \\(\\Phi(T) = \\sum{\\log S(i)}\\)\uff0c\u5bf9\u6811\u4e2d\u7684\u6240\u6709 i </p>"},{"location":"Courses/ADS/midtermReview/#red-black-tree","title":"Red-Black Tree","text":""},{"location":"Courses/ADS/midtermReview/#_7","title":"\u7ed3\u6784","text":"<p>Black-Height\uff1a\u4ece X \u5f00\u59cb\u5230\u5b83\u4efb\u610f\u7684\u53f6\u5b50\u540e\u4ee3\u8def\u5f84\u4e0a\u7684\u9ed1\u8282\u70b9\u4e2a\u6570\u4e14\u4e0d\u542b\u81ea\u8eab\u4e14\u5305\u542bNIL</p> <p>\u5b9a\u7406\uff1a\u6709 N \u4e2a internal nodes \u7684\u7ea2\u9ed1\u6811\u6700\u9ad8\u4e3a 2log(N+1) \\(bh(Tree) \\geq \\frac{1}{2}h(Tree)\\) </p>"},{"location":"Courses/ADS/midtermReview/#_8","title":"\u64cd\u4f5c","text":"<ol> <li>\u63d2\u5165\uff1a </li> <li>\u63d2\u5165\u7684\u8282\u70b9\u7684parent \u82e5\u4e3a\u9ed1 \u6216 \u63d2\u5165\u7a7a\u6811    </li> <li>\u5426\u5219\uff0c\u4e24\u7c7b(Parent's siblng \u662f\u5426\u4e3a\u7ea2\uff09\uff0c3\u79cdCase<ul> <li></li> <li></li> <li> \u63d2\u5165 \u6700\u591a\u51fa\u73b0\u4e24\u6b21 Rotation \uff01\uff01\uff01</li> </ul> </li> <li>\u5220\u9664<ul> <li>\u653e\u5f03\u5f04\u61c2  \u5220\u9664 \u6700\u591a\u51fa\u73b0\u4e09\u6b21 Rotation \uff01\uff01\uff01</li> </ul> </li> </ol>"},{"location":"Courses/ADS/midtermReview/#_9","title":"\u590d\u6742\u5ea6","text":"<p> \u6ce8\u610f search \u4e0e BST \u76f8\u540c\uff0c\u4f46 insert \u548c delete \u90fd\u662f\u5e38\u6570\u7ea7\u590d\u6742\u5ea6\uff01</p>"},{"location":"Courses/ADS/midtermReview/#b-tree","title":"B+ Tree","text":"<p>\u7565 \u8981\u6ce8\u610f \u53f6\u5b50\u8282\u70b9\u548c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u4e0d\u540c\u7684 \u53f6\u5b50\u8282\u70b9\u53ea\u5b58\u653e Key \u8981\u6ce8\u610f root\u7684\u7279\u6b8a\u6027\uff1a\u53ef\u4ee5\u5f53\u6210\u53f6\u5b50\u4e5f\u53ef\u4ee5\u5f53\u6210\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5220\u9664\u65f6root\u4f1a\u88ab\u5220\u9664</p>"},{"location":"Courses/ADS/midtermReview/#_10","title":"\u590d\u6742\u5ea6","text":""},{"location":"Courses/ADS/midtermReview/#leftist-tree","title":"Leftist Tree","text":""},{"location":"Courses/ADS/midtermReview/#_11","title":"\u7ed3\u6784","text":"<ol> <li>Leftist Tree \u5176\u5b9e\u662f\u4e00\u4e2a\u81ea\u8c03\u6574\u5806</li> <li>\u6709 N \u4e2a\u8282\u70b9\u7684\u5de6\u6c0f\u5806\uff0c\u53f3\u8def\u5f84\u4e0a\u6700\u591a\u6709 \\(\\lfloor \\log(N+1) \\rfloor\\)\uff0c\u7b49\u4ef7\u4e8e\uff1a\u6709r\u4e2a\u8282\u70b9\u5728\u53f3\u8def\u5f84\u4e0a\uff0c\u8be5\u5de6\u5f0f\u5806\u81f3\u5c11\u6709 2^r-1 \u4e2a\u8282\u70b9</li> </ol>"},{"location":"Courses/ADS/midtermReview/#_12","title":"\u590d\u6742\u5ea6","text":"<p>\u5806\u7684\u5220\u9664\uff08\u5408\u5e76\u5de6\u53f3\u5b50\u6811\uff09\u548c\u63d2\u5165\uff08\u4e0e\u5355\u8282\u70b9\u6570\u5408\u5e76\uff09\u64cd\u4f5c\u90fd\u53ef\u4ee5\u770b\u6210\u5408\u5e76 \u6240\u4ee5 Leftist Tree \u7684\u5220\u9664\u3001\u63d2\u5165\u3001\u5408\u5e76\u590d\u6742\u5ea6\u5747\u4e3a O\uff08logN)</p> <p>\u53e6\u5916\uff0cN \u5143\u7d20\u7684\u5efa\u5806\u65f6\u95f4\u4e3a O(NlogN)</p> <p></p>"},{"location":"Courses/ADS/midtermReview/#skew-heap","title":"Skew Heap","text":"<p>\u6709\u70b9\u4e71\uff0c\u653e\u5f03</p>"},{"location":"Courses/ADS/midtermReview/#_13","title":"\u7ed3\u6784","text":""},{"location":"Courses/ADS/midtermReview/#_14","title":"\u590d\u6742\u5ea6","text":"<p>\u5806\u7684\u5220\u9664\uff08\u5408\u5e76\u5de6\u53f3\u5b50\u6811\uff09\u548c\u63d2\u5165\uff08\u4e0e\u5355\u8282\u70b9\u6570\u5408\u5e76\uff09\u64cd\u4f5c\u90fd\u53ef\u4ee5\u770b\u6210\u5408\u5e76 Skew Heap\u7684\u5220\u9664\u3001\u63d2\u5165\u3001\u5408\u5e76\u5747\u644a\u590d\u6742\u5ea6\u5747\u4e3a O\uff08logN)</p> <p>\u6ce8\u610f \u5747\u644a\u5206\u6790\u65f6\u5b9a\u4e49\u7684 heavy node\u548clight node \u4ee5\u53ca\u5176\u6027\u8d28</p> <p></p> <p>\u7279\u6b8a\u4f8b\u5b50\uff1a\u4ee5\u5347\u5e8f\u63d2\u5165 2^k-1\u4e2a\u8282\u70b9\uff0c\u603b\u80fd\u5f97\u5230 full binary tree</p>"},{"location":"Courses/ADS/midtermReview/#binomial-queue","title":"Binomial Queue","text":""},{"location":"Courses/ADS/midtermReview/#_15","title":"\u7ed3\u6784","text":""},{"location":"Courses/ADS/midtermReview/#_16","title":"\u5404\u64cd\u4f5c\u53ca\u5176\u590d\u6742\u5ea6","text":"<p>\u590d\u4e60\u7b97\u6cd5\u90e8\u5206</p>"},{"location":"Courses/ADS/midtermReview/#backtracking","title":"Backtracking","text":""},{"location":"Courses/ADS/midtermReview/#divide-conquer","title":"Divide &amp; Conquer","text":""},{"location":"Courses/ADS/midtermReview/#dynamic-programming","title":"Dynamic Programming","text":""},{"location":"Courses/ADS/week1/","title":"Advanced Data Structure","text":""},{"location":"Courses/ADS/week1/#intro","title":"Intro","text":"<p>ADS, \u5168\u79f0\u4e3aAdvanced Data Structure, \u6d59\u6c5f\u5927\u5b66\u8ba1\u79d1\u7684\u4e13\u4e1a\u8bfe\u4e4b\u4e00\uff0c\u96be\u5ea6\u8f83\u9ad8</p> <p>\u6211\u7684\u8001\u5e08\u662f \u9648\u660a</p> <p>\u53c2\u8003\u8d44\u6599</p> <p>IsshikiHugh's Notebook</p>"},{"location":"Courses/ADS/week1/#week-1","title":"Week 1","text":""},{"location":"Courses/ADS/week1/#avl-trees","title":"AVL Trees","text":"<p>Note</p> <p>\u5b9a\u4e49\u4e00\u79cd\u76f8\u5bf9\u5e73\u8861\u7684\u6811\uff0c\u964d\u4f4e\u6811\u7684\u9ad8\u5ea6\uff0c\u52a0\u901f\u63d2\u5165\u548c\u67e5\u627e</p>"},{"location":"Courses/ADS/week1/#definition","title":"Definition","text":"<p>Quote</p> <p>OI Wiki: https://oi-wiki.org/ds/avl/</p> <p></p> <ol> <li>\u4e00\u4e2a\u7a7a\u4e8c\u53c9\u6811\u662f\u4e00\u4e2aAVL\u6811</li> <li>\u5982\u679c\u4e8c\u53c9\u6811 \\(T\\) \u662f\u4e00\u4e2a AVL \u6811\uff0c\u5219\u5176\u5de6\u53f3\u5b69\u5b50\u6811 \\(T_l\\) \u548c \\(T_r\\) \u4e5f\u90fd\u5e94\u8be5\u662f AVL \u6811\uff0c\u4e14\u6709 \\(|h(T_l) - h(T_r)| \\leq 1\\)\uff1b</li> </ol> <p>Balance</p> <p>\u4e00\u4e2a\u8282\u70b9\u7684 \u5e73\u8861\u56e0\u5b50(Balance Factor,BF) \u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u8282\u70b9\u7684\u5e73\u8861\u7a0b\u5ea6\uff0c\u5bf9\u4e8e\u8282\u70b9 \\(T_p\\), \u5176\u5de6\u5b50\u6811\u4e3a \\(T_l\\), \u53f3\u5b50\u6811\u4e3a \\(T_r\\), \u5219:</p> \\[    BF(T_p) = h(T_l) - h(T_r)  \\] <p>\u6240\u4ee5\u4e0a\u9762\u7684\u7b2c 2 \u6761\u53c8\u53ef\u4ee5\u5199\u6210\uff1a</p> <ul> <li>\u5982\u679c\u4e8c\u53c9\u6811 \\(T\\) \u662f\u4e00\u4e2a AVL \u6811\uff0c\u5219\u5176\u5de6\u53f3\u5b50\u6811 \\(T_l\\) \u548c \\(T_r\\) \u4e5f\u90fd\u5e94\u8be5\u662f AVL \u6811\uff0c\u4e14\u6709 \\(BF(T_p) \\in \\{0, \\pm 1\\}\\)\uff1b</li> </ul>"},{"location":"Courses/ADS/week1/#methodology","title":"Methodology","text":"<p>\u5224\u65ad\u4e00\u68f5\u6811\u662f\u5426\u662fAVL\u6811\uff0c\u4ee5\u53ca\u5982\u4f55\u7ef4\u62a4\u5b83</p> <ol> <li><code>trouble maker</code> </li> <li><code>trouble finder</code></li> <li><code>RR rotation / LL rotation</code> \u5355\u65cb</li> <li><code>LR rotation / LR rotation</code> \u53cc\u65cb</li> </ol> <p>Definition</p> <p>LL | RR</p> <p></p> <p>LR | RL</p> <p></p>"},{"location":"Courses/ADS/week1/#analysis","title":"Analysis","text":""},{"location":"Courses/ADS/week1/#splay-trees","title":"Splay Trees","text":"<p>AVL Trees \u9700\u8981\u50a8\u5b58 BF\uff0cSplay Trees \u60f3\u5728\u8282\u7ea6 Size \u7684\u540c\u65f6\uff0c\u5c3d\u91cf\u5feb</p> <p></p>"},{"location":"Courses/ADS/week1/#main-idea","title":"Main Idea","text":""},{"location":"Courses/ADS/week1/#methodology_1","title":"Methodology","text":"<p>\u9996\u5148\u6211\u4eec\u505a\u4e00\u4e2a\u7ea6\u5b9a\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 X\uff0c\u6211\u4eec\u8bb0\u5176\u7236\u8282\u70b9\u4e3a P(Parent)\uff0c\u5176\u7236\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e3a G(Grandparent)\u3002</p> <ul> <li>\u5f53\u6211\u4eec\u8bbf\u95ee\u5230\u67d0\u4e2a\u70b9 X \u65f6\uff1a<ul> <li>\u5982\u679c P \u662f\u6839\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fdb\u884c\u4e00\u6b21 Single Rotation{target=\"_blank\"}(LL \u6216\u8005 RR Rotation\uff0c\u5c06 X \u8f6c\u5230\u6839\u8282\u70b9\uff1b</li> <li>\u5982\u679c P \u4e0d\u662f\u6839\u8282\u70b9\uff1a<ul> <li>\u5f53\u60c5\u51b5\u4e3a LR / RL \u65f6\uff0c\u8fdb\u884c\u4e00\u6b21 LR Rotation \u6216 RL Rotation\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a zig-zag\uff1b</li> <li>\u5f53\u60c5\u51b5\u4e3a LL / RR \u65f6\uff0c\u8fdb\u884c\u4e24\u6b21 Single Rotation{target=\"_blank\"}\uff0c\u4f7f\u5f97 X\u3001P\u3001G \u7684\u987a\u5e8f\u9006\u8f6c\uff0c\u50cf\u8df7\u8df7\u677f\u4e00\u6837\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a zig-zig\uff1b</li> </ul> </li> <li>\u4e0d\u65ad\u5bf9 X \u8fdb\u884c Splay \u64cd\u4f5c\uff0c\u76f4\u5230 X \u6210\u4e3a\u6839\u8282\u70b9\uff1b</li> </ul> </li> </ul> <p></p>"},{"location":"Courses/ADS/week1/#amortized-analysis","title":"Amortized Analysis","text":"<p>\u5bf9Splay Trees\u7684\u5206\u6790\u91c7\u7528\u4e86Amortized Analysis</p> <p>wiki</p> <p>Wiki: \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u662f\u7528\u4e8e\u7b97\u6cd5\u5206\u6790\u4e2d\u7684\u65b9\u6cd5\uff0c\u5e73\u644a\u5206\u6790\u5e38\u7528\u4e8e\u5206\u6790\u6570\u636e\u7ed3\u6784\uff08\u52a8\u6001\u7684\u6570\u636e\u7ed3\u6784\uff09\uff0c\u5728\u4f7f\u7528\u5e73\u644a\u5206\u6790\u524d\u987b\u77e5\u9053\u6570\u636e\u7ed3\u6784\u5404\u79cd\u64cd\u4f5c\u6240\u53ef\u80fd\u53d1\u751f\u7684\u65f6\u95f4\uff0c\u5e76\u8ba1\u7b97\u51fa\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u64cd\u4f5c\u60c5\u51b5\u5e76\u52a0\u4ee5\u5e73\u5747\uff0c\u5f97\u5230\u64cd\u4f5c\u7684\u5e73\u5747\u8017\u8d39\u65f6\u95f4\u3002\u5e73\u644a\u5206\u6790\u53ea\u80fd\u786e\u4fdd\u6700\u574f\u60c5\u51b5\u6027\u80fd\u7684\u6bcf\u6b21\u64cd\u4f5c\u8017\u8d39\u7684\u5e73\u5747\u65f6\u95f4\uff0c\u5e76\u4e0d\u80fd\u786e\u8ba4\u5e73\u5747\u60c5\u51b5\u6027\u80fd\u3002</p>"},{"location":"Courses/ADS/week1/#definition_1","title":"Definition","text":""},{"location":"Courses/ADS/week1/#methodology_2","title":"Methodology","text":"<p>Amortized Analysis \u7684\u4e09\u79cd\u65b9\u6cd5</p> <p>Aggregate analysis</p> <p>\u7d2f\u79ef\u8fde\u7eed M \u6b21\u64cd\u4f5c\u7684\u4ee3\u4ef7\uff0c\u518d\u9664\u4ee5 M</p> \\[     T_{amortized} = \\frac{\\sum_i{T_{i}}}{n} \\] <p>Accounting method</p> <p>\u8bbe n \u6b21\u8fde\u7eed\u64cd\u4f5c\u7684 actual cost \u662f \\(c_i\\), \u627e\u5230 \\(c_i\\)\u7684\u5e73\u6ed1\u4e0a\u754c\\(\\hat{c}_i\\) \u4f5c\u4e3a amortized cost.</p> \\[ \\begin{align}     \\hat{c}_i &amp;= c_i + credit_i \\\\ sum_{i=1}^n{\\hat{c}_i} &amp;= \\sum_{i=1}^n{c_i} + CREDIT \\\\     T_{amortized} &amp;= \\frac{\\sum_{i=1}^n{\\hat{c}_i}}{n} \\leq \\frac{\\sum_{i=1}^n{c_i}}{n} \\end{align} \\] <p>Potential method</p> <p></p> <p>example of Splay Trees</p> <ol> <li>\u51ed\u611f\u89c9\u9009\u62e9\u5408\u9002\u7684\u52bf\u51fd\u6570 \\(\\Phi\\)...</li> <li>Splay Trees\u7684\u4e00\u6b21\u7ef4\u62a4\u4e2d\u8981\u8fdb\u884c\u4e09\u79cd\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u5206\u6790\u6bcf\u79cd\u64cd\u4f5c\u7684Amortized Cost\uff0c\u5408\u7406\u7684\u653e\u7f29\u9009\u62e9\u4e0a\u754c\uff08\u4f8b\u5982\u6b64\u4f8b\u4e2d\uff0czig\u64cd\u4f5c\u53ea\u53ef\u80fd\u51fa\u73b0\u4e00\u6b21\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fdd\u7559\u5e38\u6570\u9879\uff09 </li> <li> <p>\u7efc\u5408\u6bcf\u6b65\u64cd\u4f5c\u7684\u653e\u7f29\u540e\u7684\u7ed3\u679c\uff0c\u5f97\u5230\u4e00\u6b21\u7ef4\u62a4\u7684Amortized Cost</p> \\[ \\begin{align}     \\hat{c}_{rotate\\ x\\ to\\ root} &amp;= \\hat{c}_{zig} + \\sum{\\hat{c}_{{zig\\ zag}_i} + \\sum{\\hat{c}_{{zig\\ zig}_i}}} \\\\     &amp; \\leq 1 + R(T) - R(X) \\\\     &amp; \\leq O(\\log N) \\end{align}   \\] </li> </ol>"},{"location":"Courses/ADS/week10/","title":"Advanced Data Structure","text":""},{"location":"Courses/ADS/week10/#np-completeness","title":"NP Completeness","text":"<p>Intro</p> <p>\u95ee\u9898\u6709\u7b80\u5355\u590d\u6742\u4e4b\u5206\uff0c\u672c\u8282\u5bf9\u533a\u5206\u95ee\u9898\u7684\u96be\u5ea6\u7684\u6807\u51c6\u505a\u8ba8\u8bba    </p>"},{"location":"Courses/ADS/week10/#_1","title":"\u6982\u8ff0","text":"<p>Quote</p> <p>OI Wiki: https://oi-wiki.org/misc/cc-basic/</p> <p>\u6839\u636e\u95ee\u9898\u7684\u96be\u5ea6\uff0c\u95ee\u9898\u53ef\u5212\u5206\u4e3a\uff1a - \u53ef\u8ba1\u7b97\u95ee\u9898\uff1a   - P\u95ee\u9898 polynomial time   - NP\u95ee\u9898 nondeterministic polynomial time   - NPC\u95ee\u9898 NP complete   - NPH\u95ee\u9898 NP hard - \u4e0d\u53ef\u5224\u5b9a\u95ee\u9898\uff1aundecided problem   - example: halting problem, \u96c6\u5408\u8bba\u4e2d\u5f53\u95ee\u9898\u6d89\u53ca\u81ea\u8eab\u65f6\u5c31\u4f1a\u51fa\u73b0\u903b\u8f91\u8c2c\u8bef</p> <p>\u4e0b\u9762\u7ed9\u51fa\u53ef\u5224\u65ad\u95ee\u9898\u7684\u51e0\u7c7b\u7684\u8be6\u7ec6\u4ecb\u7ecd\uff1a</p> <p>P</p> <p>P \u53d6\u81ea polynomial time\uff0c\u6307\u7684\u662f\u53ef\u4ee5\u7528\u786e\u5b9a\u578b\u56fe\u7075\u673a\ud83d\udd0d\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002 \u4e5f\u5c31\u662f\u6211\u4eec\u901a\u5e38\u610f\u4e49\u4e0b\u6240\u8bf4\u7684\uff0c\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002</p> <p>Np</p> <p>NP \u5373 nondeterministic polynomial time\uff0c\u6307\u7684\u662f\u53ef\u4ee5\u7528\u975e\u786e\u5b9a\u578b\u56fe\u7075\u673a\ud83d\udd0d\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u3002\u8fd9\u4e2a\u8bf4\u6cd5\u7b49\u4ef7\u4e8e\u53ef\u4ee5\u7528\u786e\u5b9a\u578b\u56fe\u7075\u673a\ud83d\udd0d\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\uff08\u5224\u65ad\u7b54\u6848\u662f\u5426\u6b63\u786e\uff09\u3002 \u4e5f\u5c31\u662f\u6211\u4eec\u901a\u5e38\u610f\u4e49\u4e0b\u6240\u8bf4\u7684\uff0c\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\u7684\u95ee\u9898</p> <ol> <li>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u53ef\u5224\u65ad\u95ee\u9898\u90fd\u662f NP \u95ee\u9898 </li> <li>\\(P\\subseteq NP\\) \u662f\u663e\u7136\u7684\uff0c \u56e0\u4e3a\u4efb\u4f55\u4e00\u4e2a\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u90fd\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1, \u4f46 \\(P \\subset NP\\) \u662f\u5426\u6b63\u786e\uff0c\u76ee\u524d\u4ecd\u7136\u6ca1\u6709\u7b54\u6848\uff0c\u5373\u6211\u4eec\u4ecd\u7136\u4e0d\u77e5\u9053\u662f\u5426\u5b58\u5728\u591a\u9879\u5f0f\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u4e00\u5207 NP \u95ee\u9898\uff01</li> </ol> <p>Npc</p> <p>NPC \u5373 NP complete\uff0cNP \u5b8c\u5168\uff0c\u662f NP \u4e2d\u6700\u96be\u7684\u51b3\u5b9a\u6027\u95ee\u9898\uff08\u5e76\u4e0d\u662f\u65e0\u9650\u5b9a\u8bcd\u7684\u6700\u96be\u7684\u95ee\u9898\uff01\uff09\u3002\u800c\u6211\u4eec\u79f0\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u95ee\u9898\u4e3a NPC \u95ee\u9898\uff1a</p> <ol> <li>\u662f\u4e00\u4e2a NP \u95ee\u9898\uff1b</li> <li>\u6240\u6709 NP \u95ee\u9898\u90fd\u53ef\u4ee5\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6\u4e3a\u8be5\u95ee\u9898\uff1b</li> <li>\u7531 2 \u53ef\u4ee5\u6709\u7ed3\u8bba\uff0c\u6240\u6709\u7684 NPC \u95ee\u9898\u96be\u5ea6\u76f8\u540c\u2014\u2014\u4e00\u65e6\u6709\u4e00\u4e2a NPC \u95ee\u9898\u88ab\u89e3\u51b3\uff0c\u90a3\u4e48\u6240\u6709 NPC \u95ee\u9898\uff0c\u4e43\u81f3\u6240\u6709 NP \u95ee\u9898\u90fd\u80fd\u88ab\u89e3\u51b3\u3002</li> </ol> <p>\u5982\u679c\u6211\u4eec\u8bd5\u56fe\u8bc1\u660e\u4e00\u4e2a\u95ee\u9898\u662f NPC \u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u624b\u6bb5\uff1a</p> <ol> <li>\u5224\u5b9a\u8be5\u95ee\u9898\u662f\u4e00\u4e2a NP \u95ee\u9898\uff1b</li> <li>\u5224\u5b9a\u4e00\u4e2a\u5df2\u77e5\u7684 NPC \u95ee\u9898\u53ef\u4ee5\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6\u4e3a\u8be5\u95ee\u9898\uff0c\u6216\u5224\u5b9a\u8be5\u95ee\u9898\u662f NPH\uff08\u5728\u4e0b\u9762\uff09\u95ee\u9898\uff1b</li> </ol> <p>Polynomial</p> <p>\u5982\u679c\u6211\u4eec\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u7684\u590d\u6742\u5ea6\u5185\uff0c\u5c06\u95ee\u9898 A \u8f6c\u5316\u4e3a\u95ee\u9898 B\uff0c\u5219\u79f0\u95ee\u9898 A \u53ef\u4ee5\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6(polynomial reduce)\u4e3a B\uff0c\u8bb0\u4e3a \u200b\\(A\\leq_p B\\)\uff0c\u8868\u793a A \u4e0d\u4f1a\u6bd4 B \u96be\u3002</p> <p>Nph</p> <p>NP hard\uff0c\u5373\u975e\u5e38\u975e\u5e38\u96be\u7684\u95ee\u9898\u3002\u4f5c\u4e3a\u975e\u5e38\u975e\u5e38\u7684\u95ee\u9898\uff0c\u5b83\u4e0d\u4e00\u5b9a\u9700\u8981\u662f NP \u95ee\u9898\u3002\u800c\u6240\u6709 NP \u95ee\u9898\u90fd\u53ef\u4ee5\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6\u4e3a NPH \u95ee\u9898\u3002</p> <p>PS\uff1a NPC = \\(NP \\bigcap NPH\\)</p>"},{"location":"Courses/ADS/week11/","title":"ADS","text":""},{"location":"Courses/ADS/week11/#approximation","title":"Approximation","text":""},{"location":"Courses/ADS/week11/#_1","title":"Week11","text":""},{"location":"Courses/ADS/week11/#example","title":"example","text":""},{"location":"Courses/ADS/week11/#bin-packing","title":"Bin-Packing","text":""},{"location":"Courses/ADS/week11/#on-line","title":"On-Line","text":"<p>Next</p> <p>\u590d\u6742\u5ea6 O(N) \u8fd1\u4f3c\u6bd4 2</p> <p>!!! First Fit &amp; Best Fit     \u590d\u6742\u5ea6 \\(O(N)\\), can be optimized t o \\(O(N\\logN)\\)     \u8fd1\u4f3c\u6bd4 \u63a5\u8fd1\u4e8e 1.7 On-Line \u7b97\u6cd5\u53ea\u80fd\u8003\u8651\u524d\u9762\u7684\u8f93\u51fa\uff0c\u6709\u5c40\u9650\u6027 </p>"},{"location":"Courses/ADS/week11/#off-line","title":"Off-Line","text":""},{"location":"Courses/ADS/week2/","title":"Advanced Data Structure","text":""},{"location":"Courses/ADS/week2/#week-2","title":"Week 2","text":""},{"location":"Courses/ADS/week2/#red-black-tree","title":"Red Black Tree","text":""},{"location":"Courses/ADS/week2/#definition","title":"Definition","text":"<p>Quote</p> <p>OI Wiki: https://oi-wiki.org/ds/rb-tree/</p> <p>\u5b9a\u4e49</p> <p> 5\u6761\u6027\u8d28\u8981\u8bb0</p> <p>Black Height</p> <p>\u7279\u5b9a\u8282\u70b9\u7684\u9ed1\u9ad8\uff0c\u7b49\u4e8e\u8be5\u8282\u70b9\u5230\u53f6\u7ed3\u70b9\u5230\u7b80\u5355\u8def\u5f84\u4e2d\uff08\u4e0d\u5305\u62ec\u81ea\u8eab\uff09\uff0c\u9ed1\u8272\u8282\u70b9\u7684\u6570\u91cf</p> <p>Red-Black Property about Black Height</p> <p>\u4e00\u4e2a\u6709\\(N\\)\u4e2a\u5185\u90e8\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6\u81f3\u591a\u4e3a\\(2\\log(N+1)\\) \u8bc1\u660e\u5982\u4e0b\uff1a </p>"},{"location":"Courses/ADS/week2/#methodology","title":"Methodology","text":"<p>\u63d2\u5165\u548c\u5220\u9664\u7684\u65b9\u6cd5</p>"},{"location":"Courses/ADS/week2/#insert","title":"Insert","text":"<p>\u8bb0\u88ab\u63d2\u5165\u7684\u8282\u70b9\u4e3a x\uff0c\u4efb\u610f\u4e00\u4e2a\u8282\u70b9 node \u7684\u5bb6\u957f\u8282\u70b9\u4e3a node.p\uff0c\u5219\uff1a</p> <ol> <li>\u5982\u679c x.p \u662f\u9ed1\u8272\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u8c03\u6574\uff1b<code>Case 0</code></li> <li>\u5982\u679c x.p \u662f\u7ea2\u8272\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8fdb\u884c\u8c03\u6574\uff1b<ul> <li>\u6b64\u65f6\u56e0\u4e3a\u539f\u6765\u7684\u6811\u7b26\u5408\u7ea2\u9ed1\u6027\u8d28\uff0cx.p.p \u5fc5\u5b9a\u5b58\u5728\uff08\u7ea2 x.p \u4e0d\u80fd\u662f\u6839\uff09\u4e14\u5fc5\u5b9a\u662f\u9ed1\u8272\u7684\uff1b<code>Case 1,2,3</code></li> </ul> </li> </ol> <p>\u5bf9\u4e8e\u9700\u8981\u8fdb\u884c\u8c03\u6574\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a</p> <p>Cases</p> <p>\u6211\u4eec\u91c7\u7528\u4e86Bottom-Up\u7684\u65b9\u6cd5\uff0c\u5373\u4ece x \u5f00\u59cb\uff0c\u82e5\u6b64\u65f6\u80fd\u591f\u662f\u80fd\u89e3\u51b3\u7684Case(\u5373Case0\u3001Case3\u6216Case2)\uff0c\u5219\u95ee\u9898\u5728\u8fd9\u91cc\u89e3\u51b3\uff1b\u82e5\u89e3\u51b3\u4e0d\u4e86\uff08\u5373Case1\uff09,\u5219\u5411\u4e0a\u9012\u5f52\u5c06\u95ee\u9898\u7529\u9505x\u7684\u7237\u8282\u70b9\u3002\u91cd\u590d\u6b64\u6b65\u9aa4\uff0c\u76f4\u5230\u95ee\u9898\u89e3\u51b3\u3002</p> <p>\u6700\u574f\u7684\u60c5\u51b5\u95ee\u9898\u4e5f\u4f1a\u5728\u6839\u8282\u70b9\u65f6\u89e3\u51b3\uff0c\u56e0\u4e3a\u7531\u5b9a\u4e49\u6839\u8282\u70b9\u5fc5\u5b9a\u662f\u9ed1\u8272\u7684</p> <p>\u7531\u4e0a\uff0c\u6240\u6709\u60c5\u51b5\u53ef\u88ab\u5f52\u7eb3\u4e3a\u4e0a\u56fe\u53f3\u534a\u90e8\u5206 </p> <p>Case 3</p> <p>\u4e00\u6b21\u67d3\u8272\u548c\u4e00\u6b21\u65cb\u8f6c\u5373\u53ef </p> <p>Case 2</p> <p>\u8fdb\u884c\u4e00\u6b21LR Rotation\uff0c\u8f6c\u5316\u4e3aCase 3 </p> <p>Case 1</p> <p>Case 3\u7684\u4e24\u79cd\u60c5\u51b5\u662f\u7b49\u4ef7\u7684 \u56fe\u4e2d\u7684\u6839\u8282\u70b9\u67d3\u7ea2\uff0c\u5c06\u6839\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u67d3\u9ed1\uff0c\u7c7b\u4f3c\u4e8e\u5c06\u9ed1\u8282\u70b9\u201c\u4e0b\u653e\u201d\uff0c \u63d2\u5165\u7684\u7ea2\u8282\u70b9\u201c\u4e0a\u6d6e\u201d\uff0c\u9012\u5f52\u8f6c\u79fb </p> <p>\u4e3a\u4e86\u66f4\u6e05\u6670\u5730\u770b\u51fa\u5404\u4e2a\u65b9\u6cd5\u4e4b\u95f4\u7684\u8f6c\u5316\u5173\u7cfb\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u753b\u4e00\u4e2a\u72b6\u6001\u673a  \u6ce8\u610f\uff0c\u72b6\u6001\u673a\u4e2d\u7684\u7c97\u7ebf\u8868\u793a\u8f6c\u6362\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5173\u6ce8\u7684\u201c\u5b50\u6811\u201d\u5411\u4e0a\u6500\u5347\u4e86\u4e00\u7ea7\uff1b\u800c\u7ec6\u7ebf\u8868\u793a\u6211\u4eec\u5173\u6ce8\u7684\u5b50\u6811\u4ecd\u7136\u662f\u8fd9\u4e00\u5c42\u7684\u90a3\u4e00\u68f5\u3002\u4ee5\u53ca\uff0cC \u8868\u793a\u67d3\u8272\u64cd\u4f5c\uff0cR \u8868\u793a\u65cb\u8f6c\u64cd\u4f5c \u5176\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u60c5\u51b5\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u521d\u59cb\u60c5\u51b5\u3002\u6240\u4ee5\u53ef\u4ee5\u6570\u51fa\uff0c\u5230\u8fbe finish \u7684\u8def\u5f84\u4e2d\uff0c\u6700\u591a\u51fa\u73b0 2 \u6b21 Rotation\uff08case 2 -&gt; case 3 -&gt; finish\uff09</p>"},{"location":"Courses/ADS/week2/#delete","title":"Delete","text":"<p>Quote</p> <p>\u5199\u4e0d\u4e86\u4e00\u70b9\uff0c\u627e\u4e86\u51e0\u7bc7\u8d44\u6599\uff0c\u6211\u89c9\u5f97\u8fd9\u7bc7\u6700\u597d</p> <ul> <li>\u5bf9\u6211\u6765\u8bf4\u6bd4\u8f83\u6e05\u695a\u7684\u601d\u8def\u662f\u5c06\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u64cd\u4f5c\u5206\u4e3a\u4e24\u6b65\uff1a\u76f4\u63a5\u5220\u9664\u8282\u70b9\uff08\u4e0d\u8003\u8651\u7ea2\u9ed1\u6811\u6027\u8d28\uff09\u548c\u4fee\u590d\u7ea2\u9ed1\u6811\u6027\u8d28<ul> <li>\u5bf9\u4e8e Part I\uff0c\u5c06\u5220\u9664\u7684\u8282\u70b9\u5206\u6210\u4e09\u7c7b\uff0cno children, one child or two children\uff0c\u7136\u540e\u5206\u522b\u8ba8\u8bba</li> </ul> <p>Note</p> <p>\u8fd9\u91cc\u5bf9\u4e8e node with two children \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u662f\u53bb\u627e\u5230\u5b83\u7684\u540e\u7ee7\u8282\u70b9 in-order successor\uff0c\u7136\u540e\u5c06\u540e\u7ee7\u8282\u70b9\u7684\u503c\u8d4b\u7ed9\u5b83\uff0c\u7136\u540e\u5220\u9664\u540e\u7ee7\u8282\u70b9\uff0c\u76f8\u5f53\u4e8e\u5220\u9664\u7684\u5176\u5b9e\u662f\u540e\u7ee7\u8282\u70b9</p> <p>\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u540e\u7ee7\u8282\u70b9\u4e00\u5b9a\u6ca1\u6709 left child \u7684\uff0c\u6240\u4ee5\u5220\u9664\u540e\u7ee7\u8282\u70b9\u7684\u64cd\u4f5c\u4f1a\u53d8\u5f97\u7b80\u5355</p> <ul> <li>\u5bf9\u4e8e Part II\uff0c \u53f2<ul> <li>\u4e0a\u9762\u90a3\u7bc7\u5f15\u5165\u4e86Double Black\u548cSingle Black\u7684\u6982\u5ff5\uff0c\u4f7f\u4e71\u4e03\u516b\u7cdf\u7684\u60c5\u51b5\u7a0d\u5fae\u6e05\u6670\u4e86\u4e00\u70b9</li> </ul> </li> </ul> </li> </ul>"},{"location":"Courses/ADS/week2/#b-tree","title":"B+ Tree","text":""},{"location":"Courses/ADS/week2/#definition_1","title":"Definition","text":"<p>Warning</p> <p>\u7f51\u4e0a\u5173\u4e8eB+\u7684\u5b9a\u4e49\u6709\u597d\u591a\u7248\u672c\uff0c\u76f8\u4e92\u4e4b\u95f4\u53ef\u80fd\u662f\u77db\u76fe\u7684\u3002 </p> <p>Quote</p> <p>OI Wiki: https://oi-wiki.org/ds/bplus-tree/</p> <p>B+ \u6811\u662f B \u6811 \u7684\u4e00\u4e2a\u5347\u7ea7\uff0c\u5b83\u6bd4 B \u6811\u66f4\u9002\u5408\u5b9e\u9645\u5e94\u7528\u4e2d\u64cd\u4f5c\u7cfb\u7edf\u7684\u6587\u4ef6\u7d22\u5f15\u548c\u6570\u636e\u5e93\u7d22\u5f15\u3002\u76ee\u524d\u73b0\u4ee3\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6700\u5e7f\u6cdb\u7684\u652f\u6301\u7d22\u5f15\u7ed3\u6784\u5c31\u662f B+ \u6811\u3002</p> <p>B+ \u6811\u662f\u4e00\u79cd\u591a\u53c9\u6392\u5e8f\u6811\uff0c\u5373\u6bcf\u4e2a\u8282\u70b9\u901a\u5e38\u6709\u591a\u4e2a\u5b69\u5b50\u3002\u4e00\u68f5 B+ \u6811\u5305\u542b\u6839\u8282\u70b9\u3001\u5185\u90e8\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u3002\u6839\u8282\u70b9\u53ef\u80fd\u662f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u5b69\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002</p> <p>B+ \u6811\u7684\u7279\u70b9\u662f\u80fd\u591f\u4fdd\u6301\u6570\u636e\u7a33\u5b9a\u6709\u5e8f\uff0c\u5176\u63d2\u5165\u4e0e\u4fee\u6539\u62e5\u6709\u8f83\u7a33\u5b9a\u7684\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u3002B+ \u6811\u5143\u7d20\u81ea\u5e95\u5411\u4e0a\u63d2\u5165\uff0c\u8fd9\u4e0e\u4e8c\u53c9\u6811\u6070\u597d\u76f8\u53cd\u3002</p> <p>!!! note \u4e00\u68f5 m \u9636\u7684 B+ \u6811\u7684\u6027\u8d28     m\u9636 \u6307\u7684\u662f\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2a\u6570n \\(\\leq\\) m m\u4e5f\u53ef\u79f0\u4e3a\u4e00\u68f5\u6811\u7684Max Degree 2-3\u6811\u6307\u7684\u5c31\u662f3\u9636B+\u6811\uff0c2-3-4\u6811\u6307\u7684\u5c31\u662f4\u9636B+\u6811 \u6ce8\u610f\uff1a\u53f6\u5b50\u8282\u70b9\u7684\u5173\u952e\u5b57\u548c\u5b83\u7684\u5b57\u6570\u4e2a\u6570\u4e00\u6837\uff0c\u5373\u53f6\u5b50\u8282\u70b9\u6700\u591a\u80fd\u653em\u4e2a\u5173\u952e\u5b57\uff1b\u800c\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5173\u952e\u5b57\u6700\u591a\u53ea\u6709m-1\u4e2a\uff08\u6700\u591a\u5f62\u6210m\u4e2a\u533a\u95f4\uff09 </p> <pre><code>!!! example\n    \u4e00\u68f5 B+ \u6811\u7684\u4f8b\u5b50\n    ![alt text](image-12.png)\n</code></pre>"},{"location":"Courses/ADS/week2/#methodology_1","title":"Methodology","text":"<p>\u63d2\u5165\u548c\u5220\u9664\u7684\u65b9\u6cd5</p>"},{"location":"Courses/ADS/week2/#find","title":"Find","text":"<p>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u6839\u636e\u5173\u952e\u5b57\u7684\u5927\u5c0f\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u5b50\u6811\uff0c\u76f4\u5230\u627e\u5230\u53f6\u5b50\u8282\u70b9</p> <p>OI Wiki \u4e0a\u7684\u4ee3\u7801\u5b9e\u73b0</p> <pre><code>T find(V key) {\nint i = 0;\nwhile (i &lt; this.number) {\n    if (key.compareTo((V)this.keys[i]) &lt;= 0) break;\n    i++;\n}\nif (this.number == i) return null;\nreturn this.childs[i].find(key);\n}\n</code></pre>"},{"location":"Courses/ADS/week2/#insert_1","title":"Insert","text":"<ul> <li>\u82e5\u4e3a\u7a7a\u6811\uff0c\u521b\u5efa\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9</li> <li>\u9488\u5bf9\u53f6\u5b50\u8282\u70b9\uff0c\u63d2\u5165\u5173\u952e\u5b57\uff0c\u82e5\u8d85\u8fc7\u9608\u503c\uff0c\u5206\u88c2\uff0c\u9012\u5f52\u8f6c\u79fb\u5230\u7236\u8282\u70b9\uff08\u7d22\u5f15\u8282\u70b9\uff09\u8fdb\u884c\u7ef4\u62a4</li> <li>\u9488\u5bf9\u7d22\u5f15\u8282\u70b9\uff0c\u82e5\u5f53\u524d\u8282\u70b9\u5173\u952e\u5b57\u7684\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e m-1\uff0c\u5219\u63d2\u5165\u7ed3\u675f\u3002\u5426\u5219\uff0c\u5c06\u8fd9\u4e2a\u7d22\u5f15\u7c7b\u578b\u8282\u70b9\u5206\u88c2\u6210\u4e24\u4e2a\u7d22\u5f15\u8282\u70b9\uff0c\u5de6\u7d22\u5f15\u8282\u70b9\u5305\u542b\u524d \\((m-1)/2\\) \u4e2a key\uff0c\u53f3\u8282\u70b9\u5305\u542b \\(m-(m-1)/2\\) \u4e2a key\uff0c\u5c06\u7b2c \\(m/2\\) \u4e2a\u5173\u952e\u5b57\u8fdb\u4f4d\u5230\u7236\u8282\u70b9\u4e2d\uff0c\uff08\u5c11\u4e86\u4e00\u4e2a\u5173\u952e\u5b57\uff09\u8fdb\u4f4d\u5230\u7236\u8282\u70b9\u7684\u5173\u952e\u5b57\u5de6\u5b69\u5b50\u6307\u5411\u5de6\u8282\u70b9\uff0c\u8fdb\u4f4d\u5230\u7236\u8282\u70b9\u7684\u5173\u952e\u5b57\u53f3\u5b69\u5b50\u6307\u5411\u53f3\u8282\u70b9\u3002\u5c06\u5f53\u524d\u8282\u70b9\u7684\u6307\u9488\u6307\u5411\u7236\u8282\u70b9\uff0c\u7136\u540e\u91cd\u590d\u8fd9\u4e00\u6b65</li> </ul>"},{"location":"Courses/ADS/week2/#delete_1","title":"Delete","text":"<ol> <li>\u9996\u5148\u67e5\u8be2\u5230\u952e\u503c\u6240\u5728\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u5220\u9664\u8be5\u53f6\u5b50\u8282\u70b9\u7684\u6570\u636e\u3002</li> <li>\u5982\u679c\u5220\u9664\u53f6\u5b50\u8282\u70b9\u4e4b\u540e\u7684\u6570\u636e\u6570\u91cf\uff0c\u6ee1\u8db3 B+ \u6811\u7684\u5e73\u8861\u6761\u4ef6\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u3002 \u5426\u5219\uff0c\u5c31\u9700\u8981\u505a\u5e73\u8861\u64cd\u4f5c\uff1a\u5982\u679c\u8be5\u53f6\u5b50\u8282\u70b9\u7684\u5de6\u53f3\u5144\u5f1f\u8282\u70b9\u7684\u6570\u636e\u91cf\u53ef\u4ee5\u501f\u7528\uff0c\u5c31\u501f\u7528\u8fc7\u6765\u6ee1\u8db3\u5e73\u8861\u6761\u4ef6\u3002\u5426\u5219\uff0c\u5c31\u4e0e\u76f8\u90bb\u7684\u5144\u5f1f\u8282\u70b9\u5408\u5e76\u6210\u4e00\u4e2a\u65b0\u7684\u5b50\u8282\u70b9\u4e86\u3002</li> <li>\u5728\u4e0a\u9762\u5e73\u8861\u64cd\u4f5c\u4e2d\uff0c\u5982\u679c\u662f\u8fdb\u884c\u4e86\u5408\u5e76\u64cd\u4f5c\uff0c\u5c31\u9700\u8981\u5411\u4e0a\u4fee\u6b63\u7236\u8282\u70b9\u7684\u6307\u9488\uff1a\u5220\u9664\u88ab\u5408\u5e76\u8282\u70b9\u7684\u952e\u503c\u4ee5\u53ca\u6307\u9488\u3002</li> <li>\u7531\u4e8e\u505a\u4e86\u5220\u9664\u64cd\u4f5c\uff0c\u53ef\u80fd\u7236\u8282\u70b9\u4e5f\u4f1a\u4e0d\u5e73\u8861\uff0c\u90a3\u4e48\u5c31\u6309\u7167\u524d\u9762\u7684\u6b65\u9aa4\u4e5f\u5bf9\u7236\u8282\u70b9\u8fdb\u884c\u91cd\u65b0\u5e73\u8861\u64cd\u4f5c\uff0c\u8fd9\u6837\u4e00\u76f4\u5230\u67d0\u4e2a\u8282\u70b9\u5e73\u8861\u4e3a\u6b62\u3002</li> </ol>"},{"location":"Courses/ADS/week3/","title":"Advanced Data Structure","text":""},{"location":"Courses/ADS/week3/#week-3","title":"Week 3","text":""},{"location":"Courses/ADS/week3/#inverted-file-index","title":"Inverted File Index","text":"<p>Note</p> <p>Term-Document Incidence Matrix is too sparse to store, so we introduce Inverted File Index - Inverted File Index is a mapping from terms to the documents that contain them (adjacent list)</p>"},{"location":"Courses/ADS/week3/#definition","title":"Definition","text":"<p>Pic</p> <p> 1. How to easily print the sentences which contain the words and highlight the words? - Inverted File Index records the positions of words in each document 1. Why do we keep \"times\" in the list? - Times represents the frequency of the word in the document, which affects the effieciency some operations. AND\u64cd\u4f5c\u4ece\u6700\u5c0f\u9891\u7387\u7684term\u5f00\u59cb\u6c42\u4ea4\uff0c\u901f\u5ea6\u5feb</p>"},{"location":"Courses/ADS/week3/#methodology","title":"Methodology","text":""},{"location":"Courses/ADS/week3/#index-generator","title":"Index Generator","text":"<p>Note</p> <p>Token Analyzer &amp; Stop Filter</p> <ul> <li>Token Analyzer: \u8bcd\u6cd5\u5206\u6790\u5668\uff0c\u5c06\u6587\u672c\u5206\u5272\u6210\u5355\u8bcd</li> <li>Word Stemming: \u5c06\u8f93\u5165\u6587\u672c\u4e2d\u7684 'says' 'said', 'saying' \u90fd \u5f53\u6210 'say', \u6240\u4ee5\u80fd\u63d0\u5347\u53ec\u56de\u7387 recall\uff0c\u4f46\u51cf\u5c11\u4e86precision</li> <li>Stop Filter: \u53bb\u9664\u505c\u7528\u8bcd\uff0c\u5982\u201ca\u201d\uff0c\u201cthe\u201d\u7b49 </li> </ul> <p>Vocabulary Scanner</p> <ul> <li>omitted, \u8bfe\u4ef6\u4e0a\u627e\u4e0d\u5230\u5bf9\u5e94\u7684</li> </ul> <p>Vocabulary Insertor</p> <ul> <li>Solution 1\uff1aB-, B+, Tries Tree</li> <li>Solution 2\uff1aHashing</li> </ul> <p>Memory management</p> <ul> <li>Solution 1\uff1aDistributed Indexing \u5206\u5e03\u5f0f\u53c8\u6709\u4e24\u79cd   Document-partitioned\u8f83\u597d\uff0c\u4f53\u73b0\u5728\uff1a\u4e00\u53f0\u673a\u5668\u5b95\u673a\uff0c\u4e0d\u50cfTerm-partitioned\u6574\u4e2aindex\u7cfb\u7edf\u5931\u6548\uff0c\u53ea\u4f1a\u5f71\u54cd\u4e00\u90e8\u5206Document\u7684index</li> <li>Solution 2\uff1aDynamic Indexing </li> <li>Solution 3\uff1aCompressed Indexing  \u9700\u8981\u505aindex\u7684Doc\u53ef\u80fd\u4f1a\u662f\u4e00\u4e2a\u5929\u6587\u6570\u5b57\uff0c\u76f4\u63a5\u63090\u30011\u30012\u30013...\u7684\u987a\u5e8f\u7f16\u7801\uff0c\u4f1a\u76f4\u63a5\u8d85\u51fa\u6570\u636e\u7c7b\u578b\u8303\u56f4\u3002\u56e0\u4e3aPosting List\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u5dee\u5206\u7f16\u7801\uff0c\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4</li> </ul>"},{"location":"Courses/ADS/week3/#query-processor","title":"Query Processor","text":"<p>Note</p> <ul> <li>Threshold  \u5bf9\u4e8eQuery\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u9608\u503c\uff0c\u53ea\u8fd4\u56de\u9891\u7387\u5927\u4e8e\u9608\u503c\u7684term, \u4f18\u5148\u5904\u7406\u9891\u7387\u5c0f\u7684term</li> <li>Measure for a search engine  \u6ce8\u610f Data Retrieval \u548c Information Retrieval\u6709\u4e0d\u540c\u7684\u76ee\u6807\u548c\u8861\u91cf\u6807\u51c6: Data Retrieval\u4ec5\u662f\u627e\u5230\u5305\u542bterm\u7684\u6587\u6863\uff0c\u800cInformation Retrieval\u662f\u627e\u5230relevant\u7684\u6587\u6863</li> </ul> <p>Note</p> <p>\u5bf9\u4e8e Relenvance, \u53ef\u4ee5\u7528Precision\u548cRecall\u6765\u8861\u91cf - Precision: \u627e\u5230\u7684\u6587\u6863\u4e2d\uff0c\u6709\u591a\u5c11\u662f\u76f8\u5173\u7684 - Recall: \u6240\u6709\u76f8\u5173\u7684\u6587\u6863\u4e2d\uff0c\u627e\u5230\u4e86\u591a\u5c11  </p>"},{"location":"Courses/ADS/week4/","title":"Advanced Data Structure","text":""},{"location":"Courses/ADS/week4/#leftist-heap","title":"Leftist Heap","text":""},{"location":"Courses/ADS/week4/#definition","title":"Definition","text":"<p> <pre><code>struct LeftistHeapNode {\n    ElementType val;\n    int Npl;\n    LeftistHeapNode * ls, * rs;\n};\n</code></pre></p>"},{"location":"Courses/ADS/week4/#properties","title":"Properties","text":"<p>Note</p> <ol> <li>\u5f53\u524d\u8282\u70b9\u7684Npl\u7b49\u4e8e\u5176\u53f3\u5b69\u5b50\u8282\u70b9\u7684Npl+1</li> <li>\u82e5 \\(Npl_i=N\\), \u5219\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u81f3\u5c11\u662f\u4e00\u4e2aN+1\u5c42\u7684\u5b8c\u7f8e\u4e8c\u53c9\u6811\uff0c\u81f3\u5c11\u6709 \\(2^{N+1}-1\\) \u4e2a\u8282\u70b9</li> </ol>"},{"location":"Courses/ADS/week4/#methodology","title":"Methodology","text":""},{"location":"Courses/ADS/week4/#merge","title":"Merge","text":"<p>\u601d\u8def:\u5148\u7ef4\u62a4\u5806\u7684\u6027\u8d28\uff0c\u5728\u56de\u6eaf\u65f6\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u5148\u81ea\u4e0a\u800c\u4e0b\u518d\u81ea\u4e0b\u800c\u4e0a\u7684\u8fc7\u7a0b</p>"},{"location":"Courses/ADS/week4/#_1","title":"\u9012\u5f52\u7248","text":"<ol> <li>\u9012\u5f52\u5f0f\u5148\u6bd4\u8f83\u5f53\u524d\u4e24\u4e2a\u5f85\u5408\u5e76\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u7684\u952e\u503c\uff0c\u9009\u62e9\u8f83\u5c0f\uff08\u8f83\u5927\uff09\u7684\u90a3\u4e2a\u4f5c\u4e3a\u6839\u7ed3\u70b9\uff0c\u5176\u5de6\u5b50\u6811\u4f9d\u7136\u4e3a\u5de6\u5b50\u6811\uff0c\u53f3\u5b50\u6811\u66f4\u65b0\u4e3a\u300c\u53f3\u5b50\u6811\u548c\u53e6\u4e00\u4e2a\u5f85\u5408\u5e76\u5b50\u6811\u7684\u5408\u5e76\u7ed3\u679c\u300d</li> <li>\u5728\u9012\u5f52\u5730\u66f4\u65b0\u5b8c\u540e\uff0c\u6211\u4eec\u9700\u8981\u68c0\u67e5\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u662f\u5426\u6ee1\u8db3\\(Npl_{left\\ child} &gt; Npl_{right\\ child}\\)  \u7684\u6027\u8d28\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u6211\u4eec\u5219\u9700\u8981\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u6765\u7ef4\u6301\u6027\u8d28 </li> </ol>"},{"location":"Courses/ADS/week4/#_2","title":"\u8fed\u4ee3\u7248","text":""},{"location":"Courses/ADS/week4/#skew-heap","title":"Skew Heap","text":"<p>Quote</p> <p>Wikipedia:https://en.wikipedia.org/wiki/Skew_heap</p> <p>\u601d\u8def\uff0c\u4f9d\u7136\u5148\u7ef4\u62a4\u5806\u7684\u6027\u8d28\uff0c\u4f46\u8fd9\u6b21\u6bcf\u6b21\u5408\u5e76\u64cd\u4f5c\u4e4b\u540e\uff0c\u65e0\u6761\u4ef6\u5730\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u5728\u56de\u6eaf\u7684\u65f6\u5019\u624d\u8fdb\u884c\u5de6\u53f3\u5b50\u6811\u7684\u4ea4\u6362\u3002</p>"},{"location":"Courses/ADS/week4/#amortized-analysis-for-skew-heaps","title":"Amortized Analysis for Skew Heaps","text":"<p>potential function\u8981\u80fd\u5206\u8fa8\u51fabad luck\u548cgood luck\u3002 Right node\u7684\u6570\u91cf\u53ea\u80fd\u4f53\u73b0bad luck\uff0c\u4f46\u6ca1\u6709\u53d8\u597d\u7684\u53ef\u80fd\u3002 \u6240\u4ee5\u63d0\u51fa\u4e86\u65b0\u5b9a\u4e49 heavy node\uff0c\u5b83\u7684\u6570\u91cf\u8d8a\u591a\uff0c\u8bf4\u660e\u6574\u4e2a\u6811\u8d8a\u4e0d\u6ee1\u8db3\u201c\u5de6\u504f\u201d\u7684\u6027\u8d28\uff0c\u8d8a\u574f\u3002</p> <p></p>"},{"location":"Courses/ADS/week5/","title":"Advanced Data Structure","text":""},{"location":"Courses/ADS/week5/#binomial-queue","title":"Binomial Queue","text":"<p>\u5806\u7684\u5176\u4e2d\u4e00\u4e2a\u5e94\u7528\u5c31\u662f\u4f18\u5148\u961f\u5217\uff08\u5bf9\u539f\u6765\u961f\u5217\u4e2d\u7684\u5143\u7d20\u9644\u52a0\u4e00\u4e2a\u4f18\u5148\u7ea7\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7684\u5143\u7d20\u8d8a\u65e9\u51fa\u961f\uff09\u3002\u672c\u8282\u4ecb\u7ecd\u7684\u4e8c\u9879\u961f\u5217\uff08Binomial Queue\u4e5f\u662f\u4f18\u5148\u961f\u5217\u7684\u4e00\u79cd\u5e94\u7528\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u540c\u4e8e\u4e4b\u524d</p>"},{"location":"Courses/ADS/week5/#definition","title":"definition","text":"<p>\u4e8c\u9879\u961f\u5217(Binomial Queue)\u672c\u8d28\u4e0a\u662f\u4e00\u7cfb\u5217\u4e8c\u9879\u6811(Binomial Tree)\u7684\u96c6\u5408</p> <p>Note</p> <p> \u4e0b\u9762\u662f\u4e8c\u9879\u6811\u7684\u6027\u8d28\uff1a - \u4e8c\u9879\u6811\u6ee1\u8db3\u5806\u7684\u6027\u8d28\uff0c\u6240\u6709parent\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\u6216\u5927\u4e8echild\u8282\u70b9\u7684\u503c\u3002 - k \u9636\u4e8c\u9879\u6811\u662f\u7531\u4e24\u4e2a k-1 \u9636\u4e8c\u9879\u6811\u5408\u5e76\u5f97\u5230\u7684\uff08\u7c7b\u4f3c\u4e8e\u4e8c\u8fdb\u5236\u7684\u8fdb\u4f4d\uff09\u3002\u5408\u5e76\u65b9\u5f0f\u662f\u8ba9\u5176\u4e2d\u4e00\u68f5\u6811\u6210\u4e3a\u53e6\u5916\u4e00\u4e2a\u6811\u7684\u6839\u8282\u70b9\u7684\u5b50\u6811\u3002 - \u4e8c\u9879\u6811 \\(B_k\\) \u603b\u5171 \u6709 \\(2^k\\) \u4e2a\u8282\u70b9\uff0c\u5176\u4e2d\u6839\u8282\u70b9\u6709\\(k\\) \u4e2a\u8282\u70b9 - \u4e8c\u9879\u6811 \\(B_k\\) \u7b2cd\u5c42\u7684\u8282\u70b9\u4e2a\u6570\u7b26\u5408\u4e8c\u9879\u5f0f\u5b9a\u7406\u4e2d\u7684\u4e8c\u9879\u5f0f\u7cfb\u6570\uff08\u6839\u8282\u70b9\u6240\u5728\u5c42\u4e3a\u7b2c0\u5c42\uff09\u3002\u5982 \\(B_3\\) \u5404\u5c42\u8282\u70b9\u6570\u4e3a\uff1a1\uff0c3\uff0c3\uff0c1</p> <p>\u4e0b\u9762\u662f\u4e8c\u9879\u961f\u5217\u7684\u6027\u8d28\uff1a  - \u7c7b\u4f3c\u4e8e\u4e8c\u8fdb\u5236\u8868\u8fbe\u6574\u6570 - \u7531\u4e8c\u9879\u6811\u7b2c\u4e09\u6761\u6027\u8d28\uff0c\u4e00\u68f5\u4ece\u4f4d\u7f6e0\u5230k\u5168\u653e\u6ee1\u5143\u7d20\u7684\u4e8c\u9879\u961f\u5217\uff0c\u603b\u5171\u6709 \\(1+2+3...+2^{k-1}+2^k=2^{k+1}-1\\) \u4e2a\u8282\u70b9\u3002\u6240\u4ee5\u5c06N\u4e2a\u5143\u7d20\u4f7f\u7528\u4e8c\u9879\u961f\u5217\u50a8\u5b58\uff0c\u6700\u591a\u6709 \\(\\lceil \\log{N} \\rceil\\)\u4e2a\u6839\u8282\u70b9</p>"},{"location":"Courses/ADS/week5/#methodology","title":"Methodology","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8bbe\u8ba1\u4e8c\u9879\u961f\u5217\uff1f\u5b83\u7684\u4f18\u52bf\uff1f</p>"},{"location":"Courses/ADS/week5/#findmin","title":"FindMin","text":""},{"location":"Courses/ADS/week5/#merge","title":"Merge:","text":""},{"location":"Courses/ADS/week5/#deletemin","title":"DeleteMin","text":""},{"location":"Courses/ADS/week5/#implementation","title":"Implementation","text":""},{"location":"Courses/ADS/week5/#define-structure","title":"define structure","text":"<p>\u6ce8\u610f\u5bf9\u4e8e\u4e8c\u9879\u961f\u5217\uff0c\u6211\u4eec\u4e00\u822c\u4e0d\u9700\u8981\u968f\u673a\u8bbf\u95ee\u5b83\u7684\u6bcf\u4e2a\u5143\u7d20\\(B_i\\)\uff0c\u6240\u4ee5\u6bd4\u8d77\u7528PPT\u4e0a\u7528\u6570\u7ec4\u50a8\u5b58\uff0c\u66f4\u591a\u65f6\u5019\u8fd8\u662f\u7528\u94fe\u8868\u5b58\u50a8\u7684\u3002\u89c1Wiki</p> <p></p> <p>\u5728\u5b9e\u9645\u5b9e\u73b0\u65f6,\u6211\u4eec\u8fd8\u4f1a\u4f7f\u7528 CurrentSize\u8bb0\u5f55\u5f53\u524d\u4e8c\u9879\u961f\u5217\u4e2d\u7684\u8282\u70b9\u6570\u3002 \u76ee\u7684:\u4f7f\u7528\u4e0b\u9762\u7684\u5faa\u73af <pre><code>    for (int j=1; j &lt;= H-&gt;CurrentSize; j *= 2) \n</code></pre> \u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u904d\u5386\u4e8c\u9879\u961f\u5217\u7684\u6bcf\u4e00\u5c42\uff08\u65e0\u8bba\u6709\u6ca1\u6709\u5143\u7d20\uff09</p>"},{"location":"Courses/ADS/week5/#operation-implementation","title":"Operation Implementation","text":"<p>\u770b\u61c2PPT\u4e0a\u7684\u6bcf\u4e2a\u64cd\u4f5c\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u6b64\u5904\u7565</p>"},{"location":"Courses/ADS/week5/#amortized-annalysis","title":"Amortized Annalysis","text":"<p>\u5efa\u961f\u5217\u53ea\u9700\u8981 O(N) \u7684\u5e73\u644a\u65f6\u95f4\uff0c\u76f8\u6bd4\u5de6\u504f\u5806\u7684\u4f18\u5316:\u4e8c\u9879\u961f\u5217\u65e2\u4f7f\u5f97\u5408\u5e76\u64cd\u4f5c\u8fbe\u5230\u4e86 O(logN)\uff0c\u53c8\u4fdd\u6301\u4e86\u548c\u4e8c\u53c9\u5806\u4e00\u6837\u7ebf\u6027\u5efa\u7acb\u65f6\u95f4\u3002</p>"},{"location":"Courses/ADS/week5/#proof","title":"Proof","text":""},{"location":"Courses/ADS/week6/","title":"Adanvanced Data Structure","text":"<p>start algorithm part</p>"},{"location":"Courses/ADS/week6/#backtrack","title":"Backtrack","text":""},{"location":"Courses/ADS/week6/#eight-queen","title":"Eight Queen","text":"<ol> <li>Construct a game tree </li> <li>Perform a depth-first searcj (post-order traversal) to examine the paths </li> </ol>"},{"location":"Courses/ADS/week6/#the-turnpike-reconstruction-problem","title":"The Turnpike Reconstruction Problem","text":""},{"location":"Courses/ADS/week6/#tic-tac-toe-minimax-strategy","title":"Tic-tac-toe: Minimax Strategy","text":"<p>\\(\\aleph-\\beta pruning\\) </p>"},{"location":"Courses/ADS/week7/","title":"Adanvanced Data Structure","text":""},{"location":"Courses/ADS/week7/#divide-and-conquer","title":"Divide and Conquer","text":""},{"location":"Courses/ADS/week7/#_1","title":"\u6982\u8ff0","text":"<p>Link</p> <p>Wikipedia: https://en.wikipedia.org/wiki/Divide-and-conquer_algorithm</p>"},{"location":"Courses/ADS/week7/#_2","title":"\u590d\u6742\u5ea6\u5206\u6790","text":""},{"location":"Courses/ADS/week7/#1-substitution-method","title":"1 Substitution Method","text":""},{"location":"Courses/ADS/week7/#2-recursion-tree-method","title":"2 Recursion Tree Method","text":"<p>\u5c42\u5c42\u5c55\u5f00---&gt;\u6811\u72b6\u7ed3\u6784 \u9700\u8981\u77e5\u9053\u4ec0\u4e48\uff1f 1. \u6811\u7684\u6df1\u5ea6 2. \u9664\u53f6\u5b50\u5c42\u5916\u6bcf\u5c42 3. \u53f6\u5b50\u5c42\u8282\u70b9\u4e2a\u6570 </p> <p>\u9047\u5230\u6811\u9ad8\u4e0d\u65b9\u4fbf\u786e\u5b9a\u7684\u60c5\u51b5\uff0c\u4f1a\u4f7f\u7528\u66f4\u5177\u6811\u5f62\u56fe\u4f7f\u7528Substitution Method </p>"},{"location":"Courses/ADS/week8/","title":"Advanced Data Structure","text":""},{"location":"Courses/ADS/week8/#dynamic-programming","title":"Dynamic Programming","text":"<p>Solve sub-problems just once and save answers in a table Use a table instead of recursion</p>"},{"location":"Courses/ADS/week8/#example-1-fibonacci-number","title":"example 1 Fibonacci Number","text":""},{"location":"Courses/ADS/week8/#example-2-ordering-matrix-multiplications","title":"example 2 Ordering Matrix Multiplications","text":""},{"location":"Courses/ADS/week8/#example-3-optimal-binary-search-tree","title":"example 3 Optimal Binary Search Tree","text":""},{"location":"Courses/ADS/week8/#example-4-all-pairs-shortest-path","title":"example 4 All-Pairs Shortest Path","text":""},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/","title":"Memory Model in C++","text":"<p>Where are the variables stored in the memory?</p>"},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#overall-concept","title":"overall concept","text":""},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#global-vars","title":"\u5173\u4e8e Global Vars","text":"<ul> <li>vars defined outside any functions</li> <li>can by shared btw .cpp files</li> <li>extern\u58f0\u660e</li> </ul>"},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#static-vars","title":"\u5173\u4e8e Static Vars","text":""},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#static-global-variable","title":"static global variable","text":"<ul> <li>static global variable inhibits access from outside the .cpp file </li> <li>so as the static function</li> </ul>"},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#static-local-variable","title":"static local variable","text":"<ul> <li>static local variable keeps value in between visits to the same function</li> <li>is initialized at its first access</li> </ul> <p>\u4e0a\u9762\u5217\u4e3e\u4e09\u4e2d\u53d8\u91cf\u90fd\u5728code/data\u533a\uff08\u9759\u6001\u6570\u636e\u533a\uff09\uff0c\u7a0b\u5e8f\u542f\u52a8\u65f6\u5373\u5206\u914d\u597d\u3002</p>"},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#pointers-to-objects","title":"Pointers to objects","text":"<p>\u4e4b\u524d\u5b66\u8fc7\uff0c\u7565</p>"},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#defining-reference","title":"Defining Reference","text":"<ul> <li>References are a new data type in C++</li> </ul> <pre><code>char c;         // a character\nchar* p = &amp;c;   // a pointer to c\nchar&amp; r = c;    // a reference to c\n</code></pre> <ul> <li> <p>Declares a new name for an existing object</p> </li> <li> <p>Rules of references:</p> </li> <li> <p>References must be initialized when created</p> </li> <li> <p>Initialization establishes a binding</p> </li> <li> <p>Bindings don\u2019t change at run time, unlike pointers</p> </li> <li> <p>Assignment changes the object referred-to</p> </li> <li> <p>The target of a non-const reference must be an lvalue.</p> <p></p> </li> <li> <p></p> </li> </ul> <p></p>"},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#dynamic-memory-allocation","title":"Dynamic memory allocation","text":"<ul> <li>new expression</li> </ul> <pre><code>new int;\nnew Stash;\nnew int[10];\n</code></pre> <ul> <li>delete expression</li> </ul> <pre><code>delete p;\ndelete [] p;\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u5728\u5df2\u7ecf\u6709 malloc / free \u7684\u57fa\u7840\u4e0a\u8fd8\u8981 new / delete?</p> <p>Answer:  <code>new \\ delete</code> \u5728\u5206\u914d\\\u91ca\u653e\u5185\u5b58\u7684\u540c\u65f6\uff0c\u8fd8\u4f1a\u5bf9\u6240\u58f0\u660e\u7684\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u521d\u59cb\u5316 \uff08\u8c03\u7528\u5b83\u7684Constructor\u548cDestructor\uff09</p>"},{"location":"Courses/C%2B%2B/Memory%20Model%20in%20C%2B%2B/#const","title":"Const","text":""},{"location":"Courses/CS61A/","title":"CS61A","text":""},{"location":"Courses/CS61A/#intro","title":"Intro","text":"<p>CS61A \u662f UCB \u4e3a\u65b0\u751f\u5f00\u7684\u4e00\u95e8\u8ba1\u7b97\u673a\u5165\u95e8\u8bfe</p> <p>\u4e0a\u8fd9\u95e8\u8bfe\u7684\u8fc7\u7a0b\u4e2d\uff0c\u771f\u7684\u53ef\u4ee5\u611f\u89c9\u5230\u8bfe\u7a0b\u7ec4\u7684\u7528\u5fc3</p> <p>\u8001\u5e08\u662f John DeNero</p> <p>UCB\u516c\u5f00\u7684\u8bfe\u7a0b\u7f51\u5740\uff1aCS 61A</p> <p>\u6211\u4f7f\u7528\u7684\u662f2020\u5e74\u7684\u8bfe\u7a0b\u7f51\u7ad9\uff0c\u4f46CS61A\u5176\u5b9e\u6bcf\u5b66\u671f\u90fd\u5728\u66f4\u65b0\uff0c\u60f3\u5b66\u7684\u53ef\u4ee5\u627e\u6bd4\u8f83\u65b0\u7684\u7248\u672c</p>"},{"location":"Courses/CS61A/#week-1","title":"Week 1","text":""},{"location":"Courses/CS61A/#introduction-to-the-basics-of-python","title":"Introduction to the Basics of Python","text":""},{"location":"Courses/CS61A/#lab0","title":"Lab0","text":""},{"location":"Courses/CS61A/#basics-of-python","title":"Basics of Python","text":""},{"location":"Courses/CS61A/#expression-values","title":"Expression + Values","text":""},{"location":"Courses/CS61A/#operators","title":"Operators","text":""},{"location":"Courses/CS61A/#call-expressions","title":"Call Expressions","text":""},{"location":"Courses/CS61A/#names","title":"Names","text":""},{"location":"Courses/CS61A/#environment-diagrams","title":"Environment Diagrams","text":""},{"location":"Courses/CS61A/#functions","title":"Functions","text":""},{"location":"Courses/CS61A/#week-2","title":"Week 2","text":""},{"location":"Courses/CS61A/#control","title":"Control","text":""},{"location":"Courses/CS61A/#higher-order-function","title":"Higher Order Function","text":""},{"location":"Courses/CS61A/#environment-diagrams_1","title":"Environment Diagrams","text":""},{"location":"Courses/CS61A/#project-hog","title":"Project: Hog","text":""},{"location":"Courses/CS61A/#week-3","title":"Week 3","text":""},{"location":"Courses/CS61A/#recursion","title":"Recursion","text":""},{"location":"Courses/CS61A/#tree-recursion","title":"Tree Recursion","text":""},{"location":"Courses/CS61A/#week-4","title":"Week 4","text":""},{"location":"Courses/CS61A/#containers","title":"Containers","text":""},{"location":"Courses/CS61A/#sequences","title":"Sequences","text":""},{"location":"Courses/CS61A/#data-abstraction-dictionaries","title":"Data Abstraction + Dictionaries","text":""},{"location":"Courses/CS61A/#trees","title":"Trees","text":""},{"location":"Courses/CS61A/#mutable-sequences","title":"Mutable Sequences","text":""},{"location":"Courses/CS61A/#week-5","title":"Week 5","text":""},{"location":"Courses/CS61A/#mutable-functions","title":"Mutable Functions","text":""},{"location":"Courses/CS61A/#iterators-generators","title":"Iterators &amp; Generators","text":""},{"location":"Courses/Computer_Organization/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":""},{"location":"Courses/Computer_Organization/#intro","title":"Intro","text":"<p>\u53c2\u8003</p> <p>\u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4</p>"},{"location":"Courses/Computer_Organization/Chapter2/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":""},{"location":"Courses/Computer_Organization/Chapter2/#chapter2-instructions","title":"Chapter2 Instructions","text":""},{"location":"Courses/Computer_Organization/Chapter2/#21-introduction","title":"2.1 Introduction","text":"<p>To command a computer\u2019s hardware, you must speak its language. The words  of a computer\u2019s language are called instructions, and its vocabulary is called an  instruction set. In this chapter, you will see the instruction set of a real computer, both in the form written by people and in the form read by the computer. We  introduce instructions in a top-down fashion. ...</p>"},{"location":"Courses/Computer_Organization/Chapter2/#22-operation-of-the-computer-hardware","title":"2.2 Operation of the Computer Hardware","text":"<p>\u4e00\u6761\u6307\u4ee4\u7684\u683c\u5f0f\u4e00\u822c\u662f <code>[operation] [operand] [operand] [operand]</code></p> <p>Design Principle Simplicity favors regularity</p>"},{"location":"Courses/Computer_Organization/Chapter2/#23-operands-of-the-computer-hardware","title":"2.3 Operands of the Computer Hardware","text":""},{"location":"Courses/Computer_Organization/Chapter2/#arithmetic-operands","title":"arithmetic operands","text":"<p>\u4e00\u6761\u7b97\u672f\u6307\u4ee4\u7684 operand \u53ea\u80fd\u6765\u81ea\u4e8e <code>register</code></p> <p>Note</p> <p>RISC-V architecture \u63d0\u4f9b 32 \u4e2a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u547d\u540d\u4e3a x0 ~ x31 \uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\u662f 64 \u4f4d\u3002\u5728 RISC-V architecture \u4e2d\uff0c\u4e00\u4e2a word \u4e3a 32 \u4f4d\uff0c\u4e00\u4e2a doubleword \u4e3a 64 \u4f4d\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e2d\u7684\u4e00\u90e8\u5206\u6709\u4e13\u95e8\u7684\u7528\u9014\uff0c\u6211\u4eec\u7a0d\u540e\u5bf9\u5176\u8fdb\u884c\u8ba8\u8bba\u3002</p> <p>\u4e3a\u4ec0\u4e48\u53ea\u670932\u4e2a\uff1f Design Principle: Smaller is faster.</p>"},{"location":"Courses/Computer_Organization/Chapter2/#memory-operands","title":"memory operands","text":"<p>As explained above, arithmetic operations occur only on registers in RISC-V  instructions; thus, RISC-V must include instructions that transfer data between  memory and registers. Such instructions are called data transfer instructions. To access a word or doubleword in memory, the instruction must supply the  memory address. Memory is just a large, single-dimensional array, with the  address acting as the index to that array, starting at 0.</p> <p>Note</p> <p>The data transfer instruction that copies data from memory to a register is traditionally called load. The format of the load instruction is the name of the operation followed by the register to be loaded, then register and a constant used to access memory. The sum of the constant portion of the instruction and the contents of the second register forms the memory address. The real RISC-V name for this instruction is ld, standing for load doubleword </p> <p>The instruction complementary to load is traditionally called store; it copies data from a register to memory. The format of a store is similar to that of a load: the name of the operation, followed by the register to be stored, then the base register, and finally the offset to select the array element. Once again, the RISC-V address is specified in part by a constant and in part by the contents of a register. The actual RISC-V name is sd, standing for store doubleword</p>"},{"location":"Courses/Computer_Organization/Chapter2/#constant-or-immediate-operands","title":"Constant or Immediate Operands","text":""},{"location":"Courses/Computer_Organization/Chapter2/#24-representing-numbers-in-the-computer","title":"2.4 Representing Numbers in the computer","text":""},{"location":"Courses/Computer_Organization/Chapter2/#25-representing-instructions-in-the-computer","title":"2.5 Representing Instructions in the computer","text":"<ul> <li> <p>R type (for register) </p> </li> <li> <p>I type (with constant)  \u7528\u4e8e \u4f7f\u7528\u7acb\u5373\u6570\u7684\u7b97\u672f\u8fd0\u7b97\u3001<code>ld</code>\u7c7b</p> </li> </ul> <p>PS\uff1a </p> <ul> <li>S type (for <code>sd</code>\u7c7b) </li> </ul> <p>\u8ba1\u7b97\u673a\u4f1a\u6839\u636e\u6700\u4f4e\u4f4d\u7684 opcode \u5206\u8fa8\u5f53\u524d\u6307\u4ee4\u7684\u7c7b\u578b</p> <p></p>"},{"location":"Courses/Computer_Organization/Chapter2/#26-logical-operation","title":"2.6 Logical operation","text":""},{"location":"Courses/Computer_Organization/Chapter2/#instructions-for-making-decisions","title":"Instructions for making decisions","text":""},{"location":"Courses/Computer_Organization/Chapter2/#branch-if-else-loop","title":"Branch: If-else &amp; Loop","text":"<p>two decision-making instructions: (branch if eual and branch if not equal) <code>beq rs1, rs2, L1</code> and <code>bne rs1, rs2, L1</code> \u7b49</p> <p>Bounds Check Shortcut</p> <p><code>bgeu x20, x11, IndexOutOfBound</code>    //  if x20 &gt;= x11 or x20 &lt; 0, goto IndexOutOfBounds \u56e0\u4e3a\u8d1f\u6570\u4f7f\u7528\u8865\u7801\u8868\u793a\u7684\u7279\u6b8a\u6027\uff0c\u53ef\u4ee5\u7528\u65e0\u7b26\u53f7\u6570\u7684\u6bd4\u8f83\uff0c\u5bf9\u4e00\u4e2a\u6570\u7ec4\u7684 index \u8fdb\u884c out-of-bounds check</p> <p>branch\u6307\u4ee4\u7ecf\u5e38\u548c <code>slt</code> \u6307\u4ee4\u5408\u7528 </p>"},{"location":"Courses/Computer_Organization/Chapter2/#caseswitch","title":"Case/Switch","text":""},{"location":"Courses/Computer_Organization/Chapter2/#procedures","title":"Procedures","text":""},{"location":"Courses/Computer_Organization/Chapter2/#what-is-and-what-is-not-preserved-across-a-procedure-call-and-how","title":"What is and what is not preserved across a procedure call? and how?","text":""},{"location":"Courses/Computer_Organization/Chapter2/#memory-layout","title":"Memory Layout","text":"<p> \u6ce8\u610f\u5806\u6808\u548c\u5806\u90fd\u5c5e\u4e8e Dynamic Data\u533a</p>"},{"location":"Courses/Computer_Organization/Chapter2/#tips","title":"Tips","text":"<p>leaf procedure(\u6ca1\u6709\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u7684\u5757)\uff0c\u53ef\u4ee5\u4efb\u610f\u4f7f\u7528 temporary register</p>"},{"location":"Courses/Computer_Organization/Chapter2/#branch-addressing-jump-addressing","title":"Branch Addressing &amp; Jump Addressing","text":"<p>\u6307\u4ee4\u4e2d\u5b58\u653e\u7684\u53ea\u6709 11 ([12:1]) \u4f4d, \u5b9e\u9645\u8df3\u8f6c\u5730\u5740\u65f6\u8fd8\u8981\u5c06\u6240\u52a0\u7acb\u5373\u6570 \u4e58 2</p>"},{"location":"Courses/Computer_Organization/Chapter2/#disassembly","title":"Disassembly","text":""},{"location":"Courses/Computer_Organization/Chapter3/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":""},{"location":"Courses/Computer_Organization/Chapter3/#chapter3-arithmetic-for-computer","title":"Chapter3 Arithmetic for Computer","text":""},{"location":"Courses/Computer_Organization/Chapter3/#numbers-representations","title":"Numbers Representations","text":"<p>Note</p> <p>\u6570\uff1a - unsigned - signed   - One's complement: n-bits ---&gt; \\([-(2^{n-1}-1), 2^{n-1}-1]\\)   - Two's complement: n-bits ---&gt; \\([-2^{n-1}, 2^{n-1}-1]\\)   - sign Magnitude: n-bits ---&gt; \\([-(2^{n-1}-1), 2^{n-1}-1]\\)</p>"},{"location":"Courses/Computer_Organization/Chapter3/#arithmetic","title":"Arithmetic","text":""},{"location":"Courses/Computer_Organization/Chapter3/#_2","title":"\u6574\u6570\u8fd0\u7b97","text":""},{"location":"Courses/Computer_Organization/Chapter3/#_3","title":"\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u8868\u793a\u5f62\u5f0f\u3001\u8fd0\u7b97\u539f\u7406","text":"<p>\u56de\u987e</p> <p>\u53cd\u7801\u3001\u8865\u7801\u3001\u539f\u7801\u662f\u9488\u5bf9\u6709\u7b26\u53f7\u6570\u63d0\u51fa\u7684\uff0c\u4f7f\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u6570\u8fd0\u7b97\u65b9\u5f0f\u76f8\u540c  !!!           \u600e\u4e48\u53d1\u73b0 Overflow ?     - Double sign-bits:     \u7b26\u53f7\u4f4d \u548c \u7b26\u53f7\u4f4d\u524d\u4e00\u4f4d(\u8fdb\u4f4d)     \u600e\u4e48\u89e3\u51b3 Overflow?     </p>"},{"location":"Courses/Computer_Organization/Chapter3/#addition-substraction","title":"Addition &amp; Substraction","text":"<p>Note</p> <p>Half</p> <p></p> <p>Full</p> <p> !!! Carry look-ahead adder (CLA) \u4e0a\u9762\u6211\u4eec\u5b9e\u73b0\u7684\u5168\u52a0\u5668\u4e3aRipple Carry Adder(RCA),\u82e5\u8981\u4f7f\u5b83\u62d3\u5c55\u4e3an\u4f4d\u6570\u7684\u8fd0\u7b97\uff0cdelay\u4e5f\u4f1a\u6269\u5927n\u500d(\u4e32\u884c\u903b\u8f91)\uff1b\u663e\u7136\uff0c\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u6bd4\u8f83\u6162 \u90a3\u4e48\u5982\u4f55\u52a0\u901f\u5462\uff1f \u8bfe\u672c\u6307\u51fa\uff0cRCA \u7f13\u6162\u7684\u91cd\u8981\u539f\u56e0\u662f\u540e\u4e00\u4e2a adder \u9700\u8981\u7b49\u524d\u4e00\u4e2a adder \u7684 carry \u7ed3\u679c\u3002\u90a3\u4e48\u8003\u8651\u80fd\u4e0d\u80fd\u627e\u5230Carry\u7684\u4e00\u4e2a\u65b0\u65b9\u7a0b\uff0c\u6446\u8131\u5bf9\u524d\u9762\u7ed3\u679c\u7684\u4f9d\u8d56 \u53c2\u8003 4\u4f4dRCA\uff1a2*4+1=9\u7ea7\u65f6\u5ef6 4\u4f4dCLA\uff1a 1+2+1=4\u7ea7\u65f6\u5ef6 16\u4f4d\u4e32\u884cCLA\uff084*4\u4f4dCLA\uff091+2*4+1=10\u7ea7\u65f6\u5ef6 16\u7ea7\u7ec4\u95f4\u8d85\u524dCLA(\u8f93\u5165\u2014PG\u2014PGM\u2014CLU\u2014CLU\u2014\u5f02\u6216\u95e8\u2014\u8f93\u51fa)\uff1a1+2+2+2+1=8\u7ea7\u65f6\u5ef6</p> <p>1</p> <p></p> <p>Extended</p> <p></p> <p>Extended</p>"},{"location":"Courses/Computer_Organization/Chapter3/#_4","title":"\u6d6e\u70b9\u6570\u8fd0\u7b97","text":""},{"location":"Courses/Computer_Organization/Chapter3/#_5","title":"\u6d6e\u70b9\u6570\u7684\u8868\u793a","text":"<p>sign, significand (significant digit), exponent</p> <p>More bits for significand: more accuracy</p> <p>More bits for exponent: increases the range</p> <p></p> <p>\u90a3\u4e48\u5404\u90e8\u5206\u7684\u503c\u600e\u4e48\u8ba1\u7b97\u5462\uff1f</p> <p></p> <p>\u6ce8\u610f significand \u6709 hidden 1\uff0cexponent \u6709 bias</p> <p>Example\uff1a</p> <p></p> <p>\u90a3\u4e48\u6d6e\u70b9\u6570\u8868\u793a\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\u5982\u4f55\uff1f</p> <p></p> <p></p> <p>\u6ce8\u610f exponents 0000...00 and 1111...11 reserved</p> <p></p> <p>\u4e0a\u56fe\u7528\u5341\u8fdb\u5236\u5c0f\u6570\u70b9\u540e\u51e0\u4f4d \u8868\u793a\u7cbe\u5ea6</p> <p></p>"},{"location":"Courses/Computer_Organization/Chapter3/#addtion","title":"Addtion","text":"<p>\u6ce8\u610f \u6309\u7167\u4ee5\u4e0b4\u6b65</p> <p></p>"},{"location":"Courses/Computer_Organization/Exception/","title":"single cycle CPU Exception","text":"<p>Exception (\u5e7f\u4e49\u4e0a\u7684\u5f02\u5e38) \u5206\u4e3a Interrupt \uff08\u5916\u90e8\u4e2d\u65ad\uff09 \u548c Exception \uff08\u7cfb\u7edf\u5185\u7684\u5f02\u5e38\uff0c\u72ed\u4e49\u4e0a\u7684\uff09</p>"},{"location":"Courses/Computer_Organization/Exception/#related-hardware","title":"Related Hardware","text":""},{"location":"Courses/Computer_Organization/Exception/#interrupt-registers-mcause","title":"Interrupt Registers: mcause","text":"<p>\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u8be5\u5bc4\u5b58\u5668\u4f1a\u88ab\u5199\u5165\u5bf9\u5e94\u5f02\u5e38\u7684\u539f\u56e0\u7684\u7f16\u7801</p>"},{"location":"Courses/Computer_Organization/Exception/#interrupt-registers-miemip","title":"Interrupt Registers: mie/mip","text":""},{"location":"Courses/Computer_Organization/Exception/#procedure","title":"Procedure","text":""},{"location":"Courses/Computer_Organization/Exception/#pipline-cpu-exception","title":"Pipline CPU Exception","text":""},{"location":"Courses/Computer_Organization/MemoryHierarchy/","title":"Memory","text":""},{"location":"Courses/Computer_Organization/MemoryHierarchy/#memory-technologies","title":"Memory technologies","text":""},{"location":"Courses/Computer_Organization/MemoryHierarchy/#sram","title":"SRAM","text":"<p>\u4e00\u5bf9\u53cd\u5411\u5668\uff0c\u4e24\u4e2a\u5f00\u5173</p>"},{"location":"Courses/Computer_Organization/MemoryHierarchy/#dram","title":"DRAM","text":""},{"location":"Courses/Computer_Organization/MemoryHierarchy/#flash-memory","title":"flash memory","text":"<ol> <li>\u975e\u6613\u5931 nonvolatile</li> <li>\u5e94\u7528\u4e8e\u56fa\u6001\u786c\u76d8</li> </ol>"},{"location":"Courses/Computer_Organization/MemoryHierarchy/#disk-storage","title":"Disk storage","text":"<ol> <li>Nonvolatile, rotating magnetic storage </li> </ol>"},{"location":"Courses/Computer_Organization/MemoryHierarchy/#memory-hierarchy","title":"Memory Hierarchy","text":""},{"location":"Courses/Computer_Organization/MemoryHierarchy/#temporal-locality","title":"Temporal locality","text":""},{"location":"Courses/Computer_Organization/MemoryHierarchy/#spatial-locality","title":"Spatial locality","text":""},{"location":"Courses/DataBaseSystem/","title":"DataBase System","text":""},{"location":"Courses/DataBaseSystem/#intro","title":"intro","text":"<p>\u4e0a\u4e0d\u660e\u767d</p>"},{"location":"Courses/DataBaseSystem/#week-1-introduction","title":"Week 1 Introduction","text":""},{"location":"Courses/DataBaseSystem/#what-is-a-database-and-dbms","title":"What Is a Database and DBMS?","text":""},{"location":"Courses/DataBaseSystem/#architecture-of-database-system-1","title":"Architecture of DataBase System 1","text":""},{"location":"Courses/DataBaseSystem/#database-language","title":"Database Language","text":""},{"location":"Courses/DataBaseSystem/#database-design","title":"Database Design","text":"<p>  !!! attention     \u8fd9\u91ccPPT\u4e0a p46-p50 \u6709\u6d89\u53ca\u4eceE-R\u56fe\uff0c\u5230Relation Model Schema\uff0c\u518d\u5230 view level/ Logical level\u7684\u6570\u636e\u5e93\u8bbe\u8ba1\u8fc7\u7a0b\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u524d\u9762\u4e71\u4e03\u516b\u7cdf\u7684\u4e00\u5806\u6982\u5ff5</p>"},{"location":"Courses/DataBaseSystem/#database-users-and-administrators","title":"Database Users and Administrators","text":"<p>DB \u4ea7\u4e1a\u94fe\u4e0a\u7684\u5404\u4e2a\u751f\u6001\u4f4d</p> <p> </p>"},{"location":"Courses/DataBaseSystem/#transaction-management","title":"Transaction Management","text":""},{"location":"Courses/DataBaseSystem/#architecture-of-database-system-2","title":"Architecture of DataBase System 2","text":"<p>Database System \u4e0e User </p>"},{"location":"Courses/DataBaseSystem/#summary-of-lecture-1","title":"Summary of Lecture 1","text":""},{"location":"Courses/DataBaseSystem/Lecture5/","title":"Entity-Relationship Model","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#preliminary","title":"Preliminary","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#steps-of-database-design","title":"Steps of Database Design","text":"<ol> <li>conceptual database design  <p>(choose data model, i.e. E-R model, Net Model)</p> </li> <li>Logical database design <p>convert the conceptual design into a DB schema</p> </li> <li>Schema refinement <p>Normalization of relations: Check relational schema for redundancies and related anomalies(\u5f02\u5e38\u73b0\u8c61). </p> </li> <li>Physical database design <p>indexing, query, clustering, and database tuning</p> </li> <li>Create and initialize the database &amp; Security design  <p>Load initial data, testing Identify different user groups and their roles</p> </li> </ol> <p></p>"},{"location":"Courses/DataBaseSystem/Lecture5/#modeling","title":"Modeling","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#entity-sets","title":"Entity Sets","text":"<p>\u5173\u4e8e Entity \u8981\u6ce8\u610f\u7684\u662f \u5b83\u7684\u5c5e\u6027 Attributes \u7684\u4e0d\u540c\u79cd\u7c7b </p>"},{"location":"Courses/DataBaseSystem/Lecture5/#relationship-sets","title":"Relationship Sets","text":"<p>\u7c7b\u6bd4\u6570\u636e\u5e93\u4e2d\u7684\u5173\u7cfb\u8868\uff0c\u6216\u8005\u8bf4\u6570\u636e\u5e93\u4e2d\u7684\u5173\u7cfb\u8868\u5c31\u662f\u7531\u6b64\u800c\u6765\u7684</p>"},{"location":"Courses/DataBaseSystem/Lecture5/#keys-for-enitity-sets","title":"Keys for Enitity Sets","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#e-r-diagram","title":"E-R Diagram","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#_1","title":"\u7528\u56fe\u8868\u793a","text":"<p> \u6216 </p>"},{"location":"Courses/DataBaseSystem/Lecture5/#_2","title":"\u8981\u70b9\u3001\u7279\u6027","text":"<ul> <li>Entity sets of a relationship need not be distinct, e.g., Recursive relationship set (\u81ea\u73af\u8054\u7cfb\u96c6) </li> <li>the Cardinality Constraints </li> <li>We express cardinality constraints by drawing either a directed line (-&gt;), signifying \u201cone\u201d, or an undirected line (\u2014), signifying \u201cmany\u201d,  between the relationship set and the entity set. </li> <li>Participation of an Entity Set in a Relationship Set (\u5355\u6a2a\u7ebf\u4e0e\u53cc\u6a2a\u7ebf)</li> <li></li> <li>Alternative Notation for relationship Constraints </li> <li>\u8bed\u6587\u9898\uff0c\u7565</li> <li>E-R Diagram with a Ternary Relationship </li> <li></li> <li>Binary v.s. Ternary   </li> <li>Converting Non-Binary to Binary Form <p>\u4eba\u4e3a\u63d2\u5165 entity set \u6216\u89c2\u5bdf\u9009\u53d6\u5176\u4e2d\u4e00\u4e2a      </p> </li> </ul>"},{"location":"Courses/DataBaseSystem/Lecture5/#weak-entity-sets","title":"Weak Entity Sets","text":"<ul> <li>An entity set that does not have a primary key</li> <li>The existence of a weak entity set depends on the existence of a identifying entity set or owner entity set (\u6807\u8bc6\u5b9e\u4f53\u96c6\u6216\u5c5e\u4e3b\u5b9e\u4f53\u96c6)</li> <li>It must relate to the identifying entity set via a total, one-to-many relationship set from the identifying to the weak entity set</li> <li>Identifying relationship depicted using a double diamond \u5728E-R\u56fe\u4e0a\u7528\u53cc\u91cd\u94bb\u77f3\u6846\u8868\u793a</li> <li>The discriminator or partial key (\u5206\u8fa8\u7b26\u6216\u90e8\u5206\u7801) of a weak entity set is the set of attributes that distinguishes among all those entities in a weak entity set that depend on one particular strong entity (e.g., \u4f8b2\u4e2d\u7684payment-number).</li> <li>The primary key of a weak entity set is formed by the primary key of the strong entity set on which the weak entity set is existence dependent, plus the weak entity set\u2019s discriminator. </li> </ul> <p>Example</p> <p></p> <p>Example</p> <p></p>"},{"location":"Courses/DataBaseSystem/Lecture5/#_3","title":"\u5c0f\u7ed3","text":"<p>Example</p> <p></p>"},{"location":"Courses/DataBaseSystem/Lecture5/#extended-e-r-feature","title":"Extended E-R Feature","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#stratum-of-the-entity-set","title":"Stratum of the entity set","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#specialization","title":"Specialization (\u7279\u6b8a\u5316\u3001\u5177\u4f53\u5316)","text":"<p>Example</p> <p></p>"},{"location":"Courses/DataBaseSystem/Lecture5/#generalization","title":"Generalization (\u6cdb\u5316\u3001\u666e\u904d\u5316)","text":"<p>Example</p>"},{"location":"Courses/DataBaseSystem/Lecture5/#design-constraints-on-a-specialization-generalization-cont","title":"Design Constraints on a Specialization / Generalization (Cont.)","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"Courses/DataBaseSystem/Lecture5/#aggregation","title":"Aggregation","text":"<p>\u5f85\u8865\u5145</p>"},{"location":"Courses/DataBaseSystem/Lecture5/#summary-of-symbols-used-in-e-r-notation","title":"Summary of Symbols Used in E-R Notation","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#design-of-an-e-r-database-schema","title":"Design of an E-R Database Schema","text":""},{"location":"Courses/DataBaseSystem/Lecture5/#reduction-of-an-e-r-schema-to-tables","title":"Reduction of an E-R Schema to Tables","text":""},{"location":"theory_paper/aboutTransformer/About%20Transformer/","title":"About Transformer","text":"<p>refer to TRANSFORMERS FROM SCRATCH</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#self-attention","title":"Self-attention","text":"<ol> <li>Self-attention is a sequence-to-sequence operation, \u800c\u4e14input vectors \\(x_1, x_2, ...,x_t\\)\u548coutput vectors\\(y_1, y_2,...,y_t\\)\u7684dimension\u76f8\u540c</li> <li>The output vector \\(y_i\\) is a weighted average over all the input vectors</li> </ol> \\[ y_i = \\sum_j{w_{ij}x_j} \\] <ol> <li>So what is \\(w_{ij}\\) ? The weight \\(w_{ij}\\) is not a parameter, as in a normal neural net, but it is derived from a function over \\(x_i\\) and \\(x_j\\). The simplest option for this function is the dot product:</li> </ol> \\[ W'_{ij} = x_i^Tx_j \\] <ol> <li>\u5f53\u7136\u8fd8\u8981\u5bf9 \\(W'_{ij}\\) \u4f5c Normalization\uff0c</li> </ol> \\[ w_{ij} = \\frac{e^{w_{ij}}}{\\sum_j{e^{w'_{ij}}}}. \\] <ol> <li>Summary: 'This is the only operation in the whole architecture that propagates information between vectors. Every other operation in the transformer is applied to each vector in the input sequence without interactions between vectors.'</li> </ol>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#understanding-why-self-attention-works","title":"Understanding why self-attention works !!!","text":""},{"location":"theory_paper/aboutTransformer/About%20Transformer/#example-movie-recommendation","title":"example: movie recommendation","text":"<p>' we make the movie features and user features parameters of the model. We then ask users for a small number of movies that they like and we optimize the user features and movie features so that their dot product matches the known likes</p> <p>Even though we don\u2019t tell the model what any of the features should mean, in practice, it turns out that after training the features do actually reflect meaningful semantics about the movie content.'</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#same-with-the-self-attention-mechanism","title":"Same with the self-attention mechanism!","text":"<p>Self-attention \u5b9e\u9645\u4e0a\u662f\u6ca1\u6709\u53c2\u6570(for now)\u7684, \u53ea\u662f\u5bf9\u6bcf\u4e2ainput vector\uff0c\u7528\u5b83\u4e0e\u5176\u4ed6\u6240\u6709vector\u6c42\u5185\u79ef\uff0c\u6c42\u76f8\u5173\u5ea6\uff0c\u7136\u540e\u52a0\u6743\u4ea7\u751f\u65b0\u7684vector\u7684\u4e00\u4e2a\u5de5\u5177\u3002</p> <p>\u90a3\u4e48\u6a21\u578b\u600e\u4e48\u80fd\u5728\u8bad\u7ec3\u4e2d\u8d8b\u4e8e\u6709\u6548\u5462\uff1f\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c\u4f1a\u6839\u636eSelf-attention\u6c42\u51fa\u7684\u76f8\u5173\u5ea6\u7b26\u4e0d\u7b26\u5408\u5b9e\u9645\u7ed3\u679c\uff0c\u8fdb\u884c\u8c03\u6574\u3002</p> <p>\u90a3\u4e48\u8c03\u6574\u7684\u662f\u4ec0\u4e48\u5462\uff1finput sequence.</p> <p>\u5047\u5982\u6211\u4eec\u73b0\u5728\u5bf9\u4e00\u4e32\u6587\u5b57\u4f7f\u7528self-attension,</p> <p>'we simply assign each word \\(t\\) in our vocabulary an embedding vector \\(v_t\\)\u200b\u200b (the values of which we\u2019ll learn). This is what\u2019s known as an embedding layer in sequence modeling'</p> <p>\u5b66\u7684\u5c31\u662f word embedding \u540e\u7684 \\(sequence\\{V_t\\}\\)</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#note","title":"Note","text":""},{"location":"theory_paper/aboutTransformer/About%20Transformer/#in-pytorch-basic-self-attention","title":"In Pytorch: basic self-attention","text":"<p>See <code>basic_self_attention.py</code></p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#additional-tricks","title":"Additional tricks","text":"<p>The actual self-attention used in modern transformers relies on three additional tricks. </p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#1-queries-keys-and-values","title":"1) Queries, keys and values","text":"<p>\u5728basic self-attention\u4e2d\uff0cinput vector \\(x_i\\)\u200b is used in three different ways in the self attention operation:</p> <ul> <li>It is compared to every other vector to establish the weights for its own output \\(\ud835\udc32_i\\)</li> <li>It is compared to every other vector to establish the weights for the output of the j-th vector \\(y_j\\)</li> <li>It is used as part of the weighted sum to compute each output vector once the weights have been established</li> </ul> <p>These roles are often called the query, the key and the value $$ q_i = W_q x_{i} \\qquad k_i = W_kx_i \\qquad v_i = W_vx_i \\ w'{ij} = \\frac{q_i^Tk_j}{\\sqrt{k}} \\ w{ij} = softmax(w'{ij}) \\ y_i = \\sum_j{w'{ij}v_i} $$</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#2-scaling-the-dot-product","title":"2) Scaling the dot product","text":""},{"location":"theory_paper/aboutTransformer/About%20Transformer/#3-multi-head-attention","title":"3) Multi-head attention","text":""},{"location":"theory_paper/aboutTransformer/About%20Transformer/#in-pytorch-complete-self-attention","title":"In Pytorch: complete self-attention","text":"<p>See <code>complete_self_attention.py</code></p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#building-transformers","title":"Building transformers","text":"<p>A transformer is not just a self-attention layer, it is an architecture</p> <p>The definition of the transformer architecture is vague, but here we\u2019ll use the following definition:</p> <p>Any architecture designed to process a connected set of units\u2014such as the tokens in a sequence or the pixels in an image\u2014where the only interaction between units is through self-attention.</p> <p>Transformers \u548c Convolutions\u4e00\u6837\uff0chave a standard approach to build self-attention layers up into a larger network. The first step is to wrap the self-attention into a block that we can repeat.</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#the-transformer-block","title":"The transformer block","text":""},{"location":"theory_paper/aboutTransformer/About%20Transformer/#general-structure","title":"General structure","text":"<p>The block applies, in sequence: a self attention layer, layer normalization, a feed forward layer (a single MLP applied independently to each vector), and another layer normalization. Residual connections are added around both, before the normalization</p> <p>\uff01Normalization and residual connections are standard tricks used to help deep neural networks train faster and more accurately. The layer normalization is applied over the embedding dimension only.  \u9700\u8981\u518d\u53bb\u4e86\u89e3\u4e00\u4e9b\uff0c\u8fd9\u91cc\u5c31\u76f4\u63a5\u62ff\u6765\u7528</p> <p>Implementation: also see in <code>transformers_block.py</code></p> <pre><code>class TransformerBlock(nn.Module):\n    def __init__(self, k, heads):\n        super().__init__()\n\n        self.attention = SelfAttention(k, heads)\n\n        self.norm1 = nn.LayerNorm(k)\n        self.norm2 = nn.LayerNorm(k)\n\n        self.feedforward = nn.Sequential(\n            nn.Linear(k, 4*k)\n            nn.ReLU(),\n            nn.Linear(4 * k, k)\n        )\n\n    def forward(self, x):\n        attended = self.attention(x)\n        x = self.norm1(attended + x)\n\n        fedforward = self.feedforward(x)\n\n        return self.norm2(fedforward + x)\n</code></pre> <p>We\u2019ve made the relatively arbitrary choice of making the hidden layer of the feedforward 4 times as big as the input and output. Smaller values may work as well, and save memory, but it should be bigger than the input/output layers. </p> <p>\u5173\u4e8eMLP \u3001Hidden Layer\u53c2\u6570\u600e\u4e48\u9009\u6709\u70b9\u5fd8\u4e86\uff0c\u5148\u62ff\u6765\u7528</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#our-first-application-classification-transformer","title":"Our first application: Classification transformer","text":"<p>The simplest transformer we can build is a sequence classifier. We\u2019ll use the IMDb sentiment classification dataset: the instances are movie reviews, tokenized into sequences of words, and the classification labels are <code>positive</code> and <code>negative</code> (indicating whether the review was positive or negative about the movie)</p> <p>The General Idea: Use a large chain of transformer blocks to extract the information in the movie reviews. Feed it the input sequence of words from the tokenized movie reviews,  transformer blocks would produce a output sequence, then do something to it to get a single classification.</p> <p>The most common way to build a sequence classifier out of sequence-to-sequence layers, is to apply global average pooling to the final output sequence, and to map the result to a softmaxed class vector.</p> <p></p> <p>The most common way to build a sequence classifier out of sequence-to-sequence layers, is to apply global average pooling to the final output sequence, and to map the result to a softmaxed class vector.</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#input-using-the-positions","title":"Input: using the positions","text":"<p>\u4e4b\u524d\u6211\u4eec\u63d0\u5230\uff0cself-attention\u662f permutation invariant\u7684\uff08\u5373input sequence \u7684vector \u987a\u5e8f\u6539\u53d8\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u6bcf\u4e2avector \u6700\u540e output \u51fa\u7684\u7ed3\u679c\uff09\uff0c\u7136\u540e transformer block \u7684 \u5176\u4ed6\u5c42 layer normalization, a feed forward layer \u4e5f\u90fd\u662f permutation invariant \u7684\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u73b0\u5728\u7684transformer block \u5bf9\u4e8e\u8bcd\u5e8f\u4e0d\u540c\u7684\u4e24\u53e5\u8bdd\uff0c\u6700\u540e\u8f93\u51fa\u7684classification \u7ed3\u679c\u662f\u76f8\u540c\u7684\u3002 \u663e\u7136\u5bf9\u4e8e\u4eba\u7c7b\u8bed\u8a00\u6765\u8bf4\uff0c\u4e00\u53e5\u8bdd\u4e2d\u7684\u8bcd\u5e8f\u53d8\u5316\u975e\u5e38\u5f71\u54cd\u4e00\u53e5\u8bdd\u7684\u8bed\u610f\u3002\u56e0\u6b64\u9700\u8981\u6539\u8fdb\u3002</p> <p>Clearly, we want our state-of-the-art language model to have at least some sensitivity to word order, so this needs to be fixed.</p> <p>The solution is simple: we create a second vector of equal length, that represents the position of the word in the current sentence, and add this to the word embedding. There are two options.</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#option-1-position-embeddings","title":"option 1: position embeddings","text":"<p>' We simply embed the positions like we did the words. Just like we created embedding vectors \ud835\udc2fcat and \ud835\udc2fsusan, we create embedding vectors \ud835\udc2f12 and \ud835\udc2f25. Up to however long we expect sequences to get. The drawback is that we have to see sequences of every length during training, otherwise the relevant position embeddings don't get trained. The benefit is that it works pretty well, and it's easy to implement.'</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#option-2-position-encodings","title":"option 2: position encodings","text":"<p>' Position encodings work in the same way as embeddings, except that we don't learn the position vectors, we just choose some function \\(f:\u2115\u2192\u211d^k\\)\u200b to map the positions to real valued vectors, and let the network figure out how to interpret these encodings. The benefit is that for a well chosen function, the network should be able to deal with sequences that are longer than those it's seen during training (it's unlikely to perform well on them, but at least we can check). The drawbacks are that the choice of encoding function is a complicated hyperparameter, and it complicates the implementation a little.'</p> <p>note\uff1a\u4e0d\u592a\u61c2\u4e24\u8005\u533a\u522b\uff0c\u4e3a\u4ec0\u4e48 position encoding \u4e0d\u7528 \u5b66 position vector\uff1f</p> <p>For the sake of simplicity, we'll use position embeddings in our implementation</p>"},{"location":"theory_paper/aboutTransformer/About%20Transformer/#text-generate-transformers","title":"Text-generate Transformers","text":""},{"location":"theory_paper/aboutTransformer/About%20Transformer/#local-global-context-aware-transformer-for-language-guided-video-segmentation","title":"Local-Global Context Aware Transformer for Language-Guided Video Segmentation","text":""}]}